<HTML>
<HEAD>
<TITLE>Dublin Core Metadata Initiative / Workshops / DC1 / Metadata Requirements for Evidence</TITLE>
<SCRIPT SRC="../../javascript_level02.js" TYPE="TEXT/JAVASCRIPT"></SCRIPT>
<link rel="meta" href="resources-bearman.htm.rdf">
</HEAD>
<BODY BGCOLOR="#FFFFE7" TEXT="#000000" ALINK="#FFFFFF" LINK="#990000" VLINK="#000066">
<DIV ALIGN="CENTER">
<TABLE BORDER="0" WIDTH="86%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD><!-- #BeginLibraryItem "/Library/_top url date table.lbi" --><TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR><TD HEIGHT="20" WIDTH="50%" ALIGN="LEFT" BGCOLOR="#000000"><!-- #BeginLibraryItem "/Library/url top.lbi" -->&nbsp;&nbsp;<FONT COLOR="#FFFFCC"><B>http://purl.org/dc</B></FONT><!-- #EndLibraryItem --></TD><TD HEIGHT="20" WIDTH="50%" ALIGN="RIGHT" BGCOLOR="#000000">&nbsp;
</TD></TR>
</TABLE><!-- #EndLibraryItem -->
<TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD HEIGHT="32" WIDTH="2%" BGCOLOR="#669999">&nbsp;</TD>
<TD HEIGHT="32" WIDTH="58%" BGCOLOR="#669999"><!-- #BeginLibraryItem "/Library/dcmi logo and link.lbi" --><A HREF="/oclc/research/projects/core/index.htm"><IMG SRC="../../images/dcmi/dcmi_22.gif" WIDTH="460" HEIGHT="32" ALT="Dublin Core Metadata Initiative" BORDER="0"></A><!-- #EndLibraryItem --></TD>
<TD WIDTH="38%" ROWSPAN="2" VALIGN="TOP" BGCOLOR="#669999">
<TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="8">
<TR>
<TD ALIGN="RIGHT" VALIGN="MIDDLE"><!-- #BeginLibraryItem "/Library/pop-up menu content [level 2].lbi" --><FONT SIZE="2">
<FORM NAME="menu">
<SELECT NAME="CHOICES" onChange="gotosite(this.options[this.selectedIndex].value)">
<OPTION selected>Dublin Core topics:</OPTION>
<OPTION VALUE="../../index.htm">Home</OPTION>
<OPTION VALUE="../../search/index.htm">Search</OPTION>
<OPTION VALUE="../../sitemap/index.htm">Site Map</OPTION>
<OPTION VALUE="../../news/index.htm">What's New</OPTION>
<OPTION VALUE="../../feedback/index.htm">Feedback</OPTION>
<OPTION VALUE="../../about/element_set.htm">Dublin Core Element Set</OPTION>
<OPTION VALUE="../../about/index.htm">About the Dublin Core</OPTION>
<OPTION VALUE="../../news/index.htm">News and Publications</OPTION>
<OPTION VALUE="../../documents/index.htm">Documents</OPTION>
<OPTION VALUE="../../education/index.htm">Education</OPTION>
<OPTION VALUE="../../projects/index.htm">Projects</OPTION>
<OPTION VALUE="../../schemas/index.htm">Schemas</OPTION>
<OPTION VALUE="../../tools/index.htm">Tools</OPTION>
<OPTION VALUE="../../groups/index.htm">Working Groups</OPTION>
<OPTION VALUE="../../about/workshop.htm">Workshops</OPTION>
</SELECT>
</FORM>
</FONT><!-- #EndLibraryItem --></TD>
</TR>
</TABLE>
</TD>
<TD HEIGHT="32" WIDTH="2%" BGCOLOR="#669999">&nbsp;</TD>
</TR>
<TR>
<TD HEIGHT="20" WIDTH="2%" BGCOLOR="#669999">&nbsp;</TD>
<TD HEIGHT="20" ALIGN="LEFT" VALIGN="TOP" BGCOLOR="#669999"><!-- #BeginLibraryItem "/Library/mouseOver buttons.lbi" --><TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="425">
<TR>
<TD><A HREF="../../index.htm" onMouseOut="di('Nbuttonshorizontal_01_01','Ibuttonshorizontal_01_01');return false;" onMouseOver="di('Nbuttonshorizontal_01_01','Ibuttonshorizontal_01_01o');return false;"><IMG NAME="Nbuttonshorizontal_01_01" SRC="../../images/buttons/home.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Home"></A></TD>
<TD><A HREF="../../search/index.htm" onMouseOut="di('Nbuttonshorizontal_01_02','Ibuttonshorizontal_01_02');return false;" onMouseOver="di('Nbuttonshorizontal_01_02','Ibuttonshorizontal_01_02o');return false;"><IMG NAME="Nbuttonshorizontal_01_02" SRC="../../images/buttons/search.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Search"></A></TD>
<TD><A HREF="../../sitemap/index.htm" onMouseOut="di('Nbuttonshorizontal_01_03','Ibuttonshorizontal_01_03');return false;" onMouseOver="di('Nbuttonshorizontal_01_03','Ibuttonshorizontal_01_03o');return false;"><IMG NAME="Nbuttonshorizontal_01_03" SRC="../../images/buttons/sitemap.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Site Map"></A></TD>
<TD><A HREF="../../news/index.htm" onMouseOut="di('Nbuttonshorizontal_01_04','Ibuttonshorizontal_01_04');return false;" onMouseOver="di('Nbuttonshorizontal_01_04','Ibuttonshorizontal_01_04o');return false;"><IMG NAME="Nbuttonshorizontal_01_04" SRC="../../images/buttons/new.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="What's New"></A></TD>
<TD><A HREF="../../feedback/index.htm" onMouseOut="di('Nbuttonshorizontal_01_05','Ibuttonshorizontal_01_05');return false;" onMouseOver="di('Nbuttonshorizontal_01_05','Ibuttonshorizontal_01_05o');return false;"><IMG NAME="Nbuttonshorizontal_01_05" SRC="../../images/buttons/feedback.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Feedback"></A></TD>
</TR>
</TABLE><!-- #EndLibraryItem --></TD>
<TD HEIGHT="20" BGCOLOR="#669999" WIDTH="2%">&nbsp;</TD>
</TR>
</TABLE>
<TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD WIDTH="2%" BGCOLOR="#99CCCC">&nbsp;</TD>
<TD WIDTH="96%" ALIGN="RIGHT" VALIGN="MIDDLE" BGCOLOR="#99CCCC"><FONT COLOR="#003366"><A HREF="../dc2conference/index.htm"><B>Workshops</B></A> 
              <B>/</B> <A HREF="index.htm"><B>DC1</B></A> <B>/</B> <B>Metadata 
              Requirements for Evidence</B></FONT></TD>
<TD WIDTH="2%" BGCOLOR="#99CCCC">&nbsp;</TD>
</TR>
</TABLE>
<TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD WIDTH="2%" BGCOLOR="#FFFFCC" VALIGN="TOP">&nbsp;</TD>
<TD WIDTH="96%" VALIGN="TOP" BGCOLOR="#FFFFCC">
<P>
<BR>NOTE: This draft has been provided by the author for informational purposes only. It is a work in progress and should not be   considered the authoritative version.     Please contact the author for further information on the status   of this work:</P>
<P>David Bearman  <A HREF="mailto:dbear@lis.pitt.edu">dbear@lis.pitt.edu</A></P><HR>
<H3><FONT COLOR="#990000">Metadata Requirements for Evidence</FONT></H3>
<P>by David Bearman, Archives &amp; Museum Informatics and Ken Sochats, University of Pittsburgh, School of                 Library &amp; Information Science</P>
<P>DRAFT</P>
<P>10/95</P>
<P>Introduction: Towards A Reference Model for Business Acceptable Communications Managers in application domains from commerce to health care, and from research and development to manufacturing, are seeking to define standards for data interchange adequate for their business purposes. The literature is replete with discussions of how to enable end-to-end electronic business interaction, how to support the requirements of electronic patient records or electronic laboratory notebooks, and how to implement the documentation demanded by CALS or ISO-9000.(1)</P>
<P>At the same time, managers of existing information networks and technical personnel charged with planning the National Information Infrastructure of the future, are encountering the requirements to identify, control access, manage software dependencies, represent the business meaning, and document the use of data, in these vast,distributed, heterogeneous, computing environments.(2) Many observers feel that unless we can satisfy requirements for "integrity","authenticity", "reliability" and "archiving" of digital information,the National and Global Information Infrastructures will never be able to support serious work.(3)</P>
<P>The professions traditionally concerned with evidence and records have not ignored these emerging requirements.(4) At the University of Pittsburgh School of Library and Information Science, faculty and students engaged in a research project funded by the National Historical Publications and Records Commission have been examining the"Functional Requirements for Record keeping" as defined in a broad range of sources from law, regulation and best practices. From this "literary warrant" they have derived a specification of the attributes of"recordness" or evidentiality.(5)</P>
<P>The specification defines thirteen properties which are identified in law, regulation and best practices throughout the society as the fundamental properties of records.(6) These characteristics can be formally expressed as "production rules" or logical statements of simple observable attributes.(7) One problem associated with deriving a set of requirements from the written prose of the literature is that the specifications are often ambiguous, imprecise and subject to a high degree of interpretation.  The research group elected to represent the specification of each of the requirements formally as a set of production rules.  The production rule formalism was used during the process of developing a requirement in addition to being used as a representation mechanism for the requirement.  This helped to guarantee that the requirement specifications were as explicit and unambiguous as possible.  It also allowed the specifications to be logically refined such that the component statements of the specifications were observable states or properties.  These observables provided the foundation for the identification of a specific set of metadata which,when present, satisfies the informational needs of the specification. If this metadata is inextricably linked to, and retained with, the data associated with each business transaction it guarantees that the data object will be usable over time, be accessible only under the terms and conditions established by its creator, and have properties required to be fully trustworthy for purposes of executing business.(8) Additional metadata retained in system and organizational accountability documentation assures full evidentiality.</P>
<P>In order to facilitate implementation of environments in which electronic evidence can be created, the project has taken its findings one step further and proposed a "Reference Model" for "Business Acceptable Communications (BAC)". The metadata requirements for evidentiality or "recordness" are necessary components of the reference model. One could imagine this as a scheme for addressing electronic envelopes containing business communications that would ensure that the envelope could be opened by different computers and software in the future and its contents would still be completely understandable. Because it has been empirically found to correspond closely with the metadata specified in or required by strategies adopted by a range of discrete standardization efforts underway in a variety of application niches, the reference model appears to have relevance to, and value for, the process of defining standards for any type of BAC.(9)</P>
<P>The need for such a standard is widespread. Not only would it make communications received over networks trustworthy for the purposes of conducting business, and help to ensure accountability and protect organizations against the risks of loss of proof of their past behavior, it would greatly simply:</P>
<P>the management of huge volumes of communications from heterogeneous hosts,the proper retention and disposition of records,auditing the use of records for business, and the appropriate management of private, secure, proprietary and business confidential data.</P>
<P>A side effect of such a record keeping standard is that it will enhance the business value of the data that it preserves.  These business benefits include:</P>
<UL>
<LI>providing data for market and other research.</LI>
<LI>documenting decisions, policies, events, etc.</LI>
<LI>documenting R&amp;D and other business related processes.</LI>
</UL>
<P>To understand what data is necessary for such communications, we must begin by examining the nature of electronic evidence (or the essential properties of records).</P>
<P>Records are at one and the same time the carriers, products and documentation, of business transactions. Transactions (trans-actions) by definition are actions communicated from one person to another, from a person to a store of information (such as a filing cabinet or computer database) and thereby available to another person at a later time, or communications from a store of information to a person or another computer.(10) Because such transactions must leave the mind, computer memory, or software process in which they are created (or must be used, "over-the-shoulder" as it were, by a person with access to the same computer memory), the transaction record must be conveyed across a software layer, and typically across a number of hardware devices.</P>
<P>Not all data that has been is communicated across software and hardware layers is a record. In fact, most information created by and managed in information systems, is not a record because it lacks the properties of evidence. Records oriented professionals within organizations, such as senior management, legal counsel, auditors, Freedom of Information and Privacy officials, and archivists all require records, and not just information, but creators of the records frequently only need continued access to the information to support their work. Therefore, application environments that support the ongoing work of the organization frequently, or even usually, do not satisfy the requirements for creating evidence.  In this paper we subsequently distinguish between the terms "records" and "data", using records exclusively when we mean information that provides evidence of a transaction.</P>
<P>The Functional Requirements for Evidence within Record keeping</P>
<P>Any organization that wants to use electronic documentation as evidence in the future will need to satisfy the requirements of evidence in the normal course of conducting its business. It has been difficult to do so in the computer based communications environments we have implemented in the past because applications software sold by third parties has not met these requirements. Information systems are generally designed to hold timely, non-redundant and manipulable information, while record keeping systems store time bound, inviolable and redundant records. Few, if any, in-house information managers have been able to devote the energy to rigorous definition of the distinct requirements for record keeping or, if they had, would be able to envision how to satisfy these throughout all systems. Without such explicit and testable specifications, computing application and electronic communications systems have failed to satisfy the requirements for record keeping and are, therefore, a growing liability to companies even while they are contributing directly to day-to-day corporate effectiveness.</P>
<P>The University of Pittsburgh research project identified hundreds of sources in law, regulation, best practice guidelines, and general societal discourse which relate to the properties of evidence. From these it is clear that if records that are critical to the organization for long term accountability and to protect its rights are not created by transactions, they cannot be created after the fact from data in information systems. Information captured in the process of communication will only be evidence if the content, structure and context metadata required to satisfy the functional requirements for record keeping is captured, maintained and usable. The requirements of record keeping are corporate requirements, not those of any given business function or application, and are therefore present for any communications. They are the foundation of good business practices and are essential elements in reducing the risks of increased liabilities and decreased opportunities that accompany poor record keeping practices.</P>
<P>The functional requirements in table 1 below are derived from the many sources we consulted which defined what constitutes evidence. In addition to interviewing experts, we have systematically reviewed hundreds of sources considered authoritative by lawyers, auditors, information technology specialists and archivists and records managers. In these sources we have identified statements that pertain explicitly to the characteristics or attributes of evidence or records. Analysis of these authoritative sources revealed twenty functional requirements for evidence which fell into three broad categories. In retrospect the small number of requirements should not have surprised us, since they reflect a relatively tight social consensus about what it means for written testimony about an act in the past to be considered trustworthy in the future.</P>
<P>Table 1: FUNCTIONAL REQUIREMENTS FOR EVIDENCE IN RECORD KEEPING</P>
<PRE>Conscientious Organization</PRE>
<PRE>        Compliant (1)</PRE>
<PRE>Accountable Record keeping System</PRE>
<PRE>        Responsible</PRE>
<PRE>                Assigned (2)</PRE>
<PRE>                Documented (3)</PRE>
<PRE>        Implemented (4)</PRE>
<PRE>        Consistent (5)</PRE>
<PRE>Functional Records</PRE>
<PRE>        Comprehensive (6)</PRE>
<PRE>        Identifiable (7)</PRE>
<PRE>        Complete</PRE>
<PRE>                Accurate (8)</PRE>
<PRE>                Understandable (9)</PRE>
<PRE>                Meaningful (10)</PRE>
<PRE>        Authorized (11)</PRE>
<PRE>        Preserved</PRE>
<PRE>                Inviolate (12)</PRE>
<PRE>                Coherent (13)</PRE>
<PRE>                Auditable (14)</PRE>
<PRE>        Removable (15)</PRE>
<PRE>        Exportable (16)</PRE>
<PRE>        Accessible</PRE>
<PRE>                Available (17)</PRE>
<PRE>                Renderable (18)</PRE>
<PRE>                Evidential (19)</PRE>
<PRE>        Redactable (20)</PRE>
<P>Organization: Conscientious</P>
<P>1. Compliant:  Organizations must comply with the legal and administrative requirements for record keeping within the jurisdictions   in which they operate, and they must demonstrate awareness of best   practices for the industry or business sector to which they belong and   the business functions in which they are engaged.</P>
<P></P>
<P>1a.  External record keeping requirements are known.</P>
<P>1a1. Laws of jurisdiction with authority over the record creating organizations are known.</P>
<P>1a2. Regulatory issuances of entities with administrative authority over the record creating organizations are known.</P>
<P>1a3. Best practices of record keeping established by professional and business organizations within the industry and            business functions of the organization are known.</P>
<P>1b. Records created by organizational business transactions which are governed by external record keeping requirements       are linked to an internal retention rule referencing the documented       law, regulation, or statement of best practice.</P>
<P>1c. Laws, regulations, and statements of best practice with requirements for record keeping are tracked so that changes to them are reflected       in updated internal record keeping instructions.</P>
<P>Record keeping Systems: Accountable</P>
<P>2. Responsible:  Record keeping systems must have accurately documented policies, assigned responsibilities, and formal methodologies for their    management.</P>
<P>2a. Assigned    A person or office is designated in writing as responsible for satisfying  record keeping requirements in each system.</P>
<P>2b. Documented</P>
<P></P>
<P>2b1. System policies and procedures are written and changes to them are maintained and current.</P>
<P></P>
<P>2b2. System management methods are defined for all routine tasks.</P>
<P>2b3. System management methods are defined for events in which the primary system fails.</P>
<P>3. Implemented:  Record keeping systems must be employed at all times in the normal course of business.</P>
<P>3a. Business transactions are conducted only through the documented record keeping system and its documented exception procedures.</P>
<P>3b. No records can be created in the record keeping systems except through execution of a business transaction.</P>
<P>3c. Record keeping systems and/or documented exception procedures can be demonstrated to have been operating at all times.</P>
<P>4. Consistent:  Record keeping systems must process information in a fashion that assures that the records they create are credible.</P>
<P>4a. Identical data processes permitted by the system must produce identical outcomes regardless of the conditions under which they        are executed.</P>
<P>4b. Results of executing systems logic are demonstrable outside the system.</P>
<P>4c. All operational failures to execute instructions are reported by the system.</P>
<P>4d. In the event of system failures, processes under way are recovered and re-executed.</P>
<P>Records: Captured</P>
<P>5. Comprehensive: Records must be created for all business transactions.</P>
<P>5a. Communications in the conduct of business between two people, between a person and a store of information available to others, and       between a source of information and a person, all generate a record.</P>
<P>5b. Data interchanged within and between computers under the control of software employed in the conduct of business creates a       record when the consequence of the data processing function is to       modify records subsequently employed by people in the conduct of       business.</P>
<P>6. Identifiable: Records must be bounded by linkage to a transaction which used all the data in the record and only that data.</P>
<P>6a. There exists a discrete record, representing the sum of all data associated  with a business transaction.</P>
<P>6b. All data in the record belongs to the same transaction.</P>
<P>6c. Each record is uniquely identified.</P>
<P>7. Complete: Records must contain the content, structure, and context generated by the transaction they document.</P>
<P>7a. Accurate:  The content of records must be quality controlled at input to ensure that information in the system correctly reflects        what was communicated in the transaction.</P>
<P>7a1. Data capture practices and system functions ensure that source data is exactly replicated by system or corrected to reflect             values established in system authority files.</P>
<P>7b. Understandable:  The relationship between elements of information content must be represented in a way that supports their intended         meaning.</P>
<P>7b1. Meaning conveyed by presentation of data are retained or represented.</P>
<P>7b2. System defined views or permissions are retained and the effects are reflected in the record represented.</P>
<P>7b3. Logical relations defined across physical records are retained or represented.</P>
<P>7b4. Software functionality invoked by data values in the content of the record are supported or represented.</P>
<P>7c. Meaningful:  The contextual linkages of records must carry information necessary to understand correctly the transactions that         created and used them.</P>
<P>7c1. The business rules for transactions, which minimally locate the transaction within a business function, are captured.</P>
<P>7c2. A representation of the source and time of the transaction which generated a record is captured.</P>
<P>7c3. Links between transactions which comprised a single logical business activity are captured.</P>
<P>8. Authorized:  An authorized records creator must have originated all records.</P>
<P>8a. All records have creators which are documented.</P>
<P>8b. Records creators must have been authorized to engage in the business transaction that generated the record.</P>
<P></P>
<P>Records: Maintained</P>
<P>9. Preserved:  Records must continue to reflect content, structure, and context within any systems by which the records are retained over time.</P>
<P>9a. Inviolate: Records are protected from accidental or intended damage or destruction and from any modification.</P>
<P>9a1. No data within a record may be deleted, altered, or lost once the transaction which generated it has occurred.</P>
<P>9b. Coherent: The information content and structure of records must be retained in reconstructible relations.</P>
<P>9b1. If records are migrated to new software environments, content, structure, and context information must be linked to software            functionality that preserves their executable connections or            representations of their relations must enable humans to             reconstruct the relations that pertained in the original             software environment.</P>
<P>9b2. Logical record boundaries must be preserved regardless of physical representations.</P>
<P>9c. Auditable: Record context represents all processes in which records participated.</P>
<P>9c1. All uses of records are transactions.</P>
<P>9c2. Transactions which index, classify, schedule, file, view, copy, distribute, or move a record without altering it are documented             by audit trails attached to the original record.</P>
<P>9c3. Transactions which execute a records disposition instruction, whether for retention or destruction, are documented  by audit             trails attached to the original record.</P>
<P>10. Removable: Records content and structure supporting the meaning of content must be deletable.</P>
<P>10a. Authority for deletion of record content and structure exists.</P>
<P>10b. Deletion transactions are documented as audit trails.</P>
<P>10c. Deletion transactions remove the content and structural information of records without removing audit trails reflecting          context.</P>
<P>Records: Usable</P>
<P>11. Exportable:  It must be possible to transmit records to other systems without loss of information.</P>
<P>11a. Exporting protocols should be reversible.</P>
<P>11b. Functionality should be represented in a fashion that produces the same result in the target system as in the originating         environment.</P>
<P>12. Accessible:  It must be possible to output record content, structure, and context.</P>
<P>12a. Available:  Records must be available.</P>
<P>12b. Renderable:  Records must display, print, or be abstractly represented as they originally appeared at the time of creation          and initial receipt.</P>
<P>12b1. The structure of data in a record must appear to subsequent users as it appeared to the recipient of the               record in the original transaction or a human meaningful               representation of that original rendering should               accompany the presentation of the original context.</P>
<P>12c. Evidential: Record's representations must reflect the context of the creation and use of the records.</P>
<P>13. Redactable: Records must be masked when it is necessary to deliver censored copies and the version as released must be  documented in a     linked transaction.</P>
<P>13a. The release of redacted versions of a record is a discrete business transaction.</P>
<P>13b. The fact of the release of a redacted version of a record is an auditable use  of the original record and therefore          results in creation of an audit trail with a link to the          transaction which released the redaction.</P>
<P>[It should be noted by the reader that these requirements delineate the requirements for evidence in record keeping Thus, they are only a subset of the functional requirements for an automated record keeping systems environment. Requirements for security, compatibility, interfaces, standards, business strategy and similar issues would need to be addressed in a comprehensive statement of the requirements for acquiring a record keeping system.]</P>
<P>Over the course of the past two years, this prose requirements statement has been subjected to rigorous analysis as we expressed it in a formal representation. This version, which we call the "Production Rules Representation of the Functional Requirements for Evidence" has forced us to operationalize a number of concepts that are not very precise in the literary warrant and were not specific enough in the prose specification to ensure that a computer system would be able to validate their presence or absence. Care has been taken in the development of the specification of the requirements to include only those elements that are required to delineate the requirement.  It is very easy to fall into the trap of overspecification and include statements that would pre-define some level of implementation.  For this reason, some of the requirements appear to to be very abstract.  These higher level specifications need to be further defined by the implementer to indentify specific system design artifacts. We have made an effort to ensure that only observable data or calculations from observables reside at the leaf nodes of the production rules. The observables consist of metadata and a very limited predicate vocabulary has been used to simplify system requirements for auditing the production rules. The production rules representation is reproduced in table 2, below.</P>
<P>Table 2: PRODUCTION RULE REPRESENTATION OF REQUIREMENTS FOR EVIDENCE</P>
<PRE>&lt;RECORD KEEPING_REQUIREMENTS Satisfied&gt;: (1.0)</PRE>
<PRE>        &lt;ORGANIZATION Compliant&gt; (2.0)</PRE>
<PRE>        &lt;SYSTEM Accountable&gt; (3.0)</PRE>
<PRE>        &lt;RECORDS Functional&gt; (4.0)</PRE>
<PRE>&lt;ORGANIZATION Compliant&gt; :(2.0)</PRE>
<PRE>        &lt;EXTERNAL_REQUIREMENTS Delineated&gt; (2.0a)</PRE>
<PRE>        &lt;Linked INTERNAL_RULES EXTERNAL_REQUIREMENTS &gt; (2.0b)</PRE>
<PRE>        &lt;INTERNAL_RULES Up-to-Date&gt; (2.0c)</PRE>
<PRE>&lt;EXTERNAL_REQUIREMENTS Delineated&gt;: (2.0a)      </PRE>
<PRE>        &lt;LEGAL_REQUIREMENTS Known&gt;(2.0a1)</PRE>
<PRE>        &lt;REGULATORY_ISSUANCES Identified&gt; (2.0a2)</PRE>
<PRE>        &lt;BEST_PRACTICES Identified&gt; (2.0a3)</PRE>
<PRE>&lt;LEGAL_REQUIREMENTS Known&gt;:(2.0a1)      </PRE>
<PRE>        &lt;LEGISLATIVE_AUTHORITY Identified&gt;(2.0a1a)              </PRE>
<PRE>        &lt;Has_Jurisdiction LEGISLATIVE_AUTHORITY  ORGANIZATION&gt; (2.0a1b)</PRE>
<PRE>        &lt;Notification_Methods(LEGISLATIVE_AUTHORITY) Identified&gt;(2.0a1c)</PRE>
<PRE>        &lt;Relevant Laws(LEGISLATIVE_AUTHORITY)  </PRE>
<PRE>                                RECORD KEEPING_REQUIREMENTS&gt;(2.0a1d)</PRE>
<PRE>        &lt;Relevant Laws(LEGISLATIVE_AUTHORITY) ORGANIZATION&gt;(2.0a1e)</PRE>
<PRE>        &lt;Laws(LEGISLATIVE_AUTHORITY) In-effect&gt;(2.0a1f)</PRE>
<PRE>&lt;REGULATORY_ISSUANCES Known&gt;: (2.0a2)   </PRE>
<PRE>        &lt;REGULATOR Identified&gt;(2.0a2a)</PRE>
<PRE>        &lt;Has_Legal_Authority REGULATOR ORGANIZATION&gt; (2.0a2b)</PRE>
<PRE>        &lt;Has_Administrative_Authority REGULATOR ORGANIZATION&gt; (2.0a2c)</PRE>
<PRE>        &lt;Relevant Regulatory_Issuances(REGULATOR)</PRE>
<PRE>                                         RECORD KEEPING_REQUIREMENTS&gt;(2.0a2d)</PRE>
<PRE>        &lt;Notification_Methods(REGULATOR) Identified&gt;(2.0a2e)</PRE>
<PRE>        &lt;Relevant Regulatory_Issuances(REGULATOR) ORGANIZATION&gt;(2.0a2f)</PRE>
<PRE>        &lt;Regulatory_Issuances(REGULATOR) In-effect&gt;(2.0a2g) </PRE>
<PRE>&lt;BEST_PRACTICES Known&gt;: (2.0a3)</PRE>
<PRE>        &lt;PROFESSIONAL_ORGANIZATION Identified&gt;(2.0a3a)</PRE>
<PRE>        &lt;Has_Purview PROFESSIONAL_ORGANIZATION BUSINESS_FUNCTION&gt;(2.0a3b)</PRE>
<PRE>        &lt;Notification_Methods(PROFESSIONAL_ORGANIZATION) Identified&gt;(2.0a2e)</PRE>
<PRE>        &lt;Relevant Best_Practices(PROFESSIONAL_ORGANIZATION)</PRE>
<PRE>                                         RECORD KEEPING_REQUIREMENTS&gt; (2.0a3d)</PRE>
<PRE>        &lt;Relevant Best_Practices(PROFESSIONAL_ORGANIZATION) </PRE>
<PRE>ORGANIZATION&gt;                                                                                   (2.0a3e)</PRE>
<PRE>        &lt;Best_Practices(PROFESSIONAL_ORGANIZATION) In-effect&gt; (2.0a3f)</PRE>
<PRE>&lt;Linked EXTERNAL_REQUIREMENTS INTERNAL_RULES&gt;: (2.0b)   </PRE>
<PRE>        &lt;Cited Rule_Identifier(RECORD) Identifier(RETENTION_RULE)&gt; (2.0b1)</PRE>
<PRE>        &lt;Cited External_Identifier(RETENTION_RULE) </PRE>
<PRE>                                Identifier(EXTERNAL_REQUIREMENT)&gt;  (2.0b2)</PRE>
<PRE>&lt;INTERNAL_RULES Up-to_Date&gt;: (2.0c)     </PRE>
<PRE>        &lt;NOTIFICATIONS Acquired) &gt;(2.0c1)</PRE>
<PRE>        &lt;Derived EXTERNAL_REQUIREMENTS NOTIFICATION&gt;(2.0c2)</PRE>
<PRE>&lt;SYSTEM Accountable&gt; :  (3.0)</PRE>
<PRE>        &lt;SYSTEM Responsible&gt; (3.0a)</PRE>
<PRE>        &lt;SYSTEM Implemented&gt; (3.0b)</PRE>
<PRE>        &lt;SYSTEM Consistent&gt; (3.0c)</PRE>
<PRE>&lt;SYSTEM Responsible&gt; : (3.0a)</PRE>
<PRE>        &lt;MANAGEMENT Formalized&gt; (3.0a1)</PRE>
<PRE>&lt;MANAGEMENT Formalized&gt;: (3.0a1)        </PRE>
<PRE>        &lt;Defined  MANAGEMENT_METHODS TRANSACTIONS &gt; (3.0a1b)</PRE>
<PRE>        &lt;Defined  BUSINESS_PROCESSES TRANSACTIONS &gt; (3.0a1c)</PRE>
<PRE>&lt;Defined MANAGEMENT_METHODS TRANSACTIONS &gt;: (3.0a1a)</PRE>
<PRE>        &lt;MANAGEMENT_METHODS Written&gt; (3.0a1a1)</PRE>
<PRE>        &lt;Prescribed BUSINESS_RULES TRANSACTIONS&gt; (3.0a1a)</PRE>
<PRE>        &lt;Permissions(TRANSACTION) Assigned&gt; (3.0a1a5)</PRE>
<PRE>&lt;Defined BUSINESS_PROCESSES TRANSACTIONS&gt;: (3.0a1b)     </PRE>
<PRE>        &lt;BUSINESS_PROCESSES Written&gt; (3.0a1b1)</PRE>
<PRE>        &lt;Prescribed BUSINESS_PROCESSES TRANSACTIONS&gt; (3.0a1a)</PRE>
<PRE>        &lt;Permissions(AGENTS) Assigned&gt;(3.0a1b2)</PRE>
<PRE>&lt;SYSTEM Implemented&gt;: (3.0b)    </PRE>
<PRE>        &lt;SYSTEM In_Effect&gt; (3.0b1)</PRE>
<PRE>        &lt;State(SYSTEM) Functioning &gt; (3.0b3a)</PRE>
<PRE>&lt;SYSTEM In_Effect&gt; :(3.0b1)</PRE>
<PRE>        &lt;Processed_By  PROCEDURE TRANSACTION&gt; (3.0b1a)</PRE>
<PRE>&nbsp;</PRE>
<PRE>&lt;SYSTEM In_Effect&gt; :(3.0b1)     </PRE>
<PRE>        &lt;Processed_By EXCEPTION_PROCEDURE TRANSACTION &gt; (3.0b1a')</PRE>
<PRE>&lt;SYSTEM Consistent&gt; : (3.0c)    </PRE>
<PRE>        &lt;OUTCOME Uniform&gt; (3.0c1)</PRE>
<PRE>        &lt;SYSTEM Logical&gt; (3.0c2)</PRE>
<PRE>        &lt;FAILURES Evident&gt; (3.0c3)</PRE>
<PRE>        &lt;FAILURES Corrected&gt; (3.0c4)</PRE>
<PRE>&lt;OUTCOMES Uniform&gt;:  (3.0c1)    </PRE>
<PRE>        &lt;Equal SYSTEM_PROCESS(Transaction Time1) </PRE>
<PRE>SYSTEM_PROCESS(Transaction Time2) )&gt; (3.0c1a)</PRE>
<PRE>&lt;SYSTEM Logical&gt;:  (3.0c2)      </PRE>
<PRE>        &lt;Equal TEST(SYSTEM_LOGIC) (BUSINESS_RULES)&gt; (3.0c2a)</PRE>
<PRE>&lt;FAILURES Evident&gt;:  (3.0c3)    </PRE>
<PRE>        &lt;Creates RECORD FAILURE &gt; (3.0c3a)</PRE>
<PRE> </PRE>
<PRE>&lt;FAILURES Corrected&gt;: (3.0c4)   </PRE>
<PRE>        &lt;PROCESSES Recovered&gt; (3.0c4a)</PRE>
<PRE>        &lt;PROCESSES Re-executed&gt; (3.0c4b)</PRE>
<PRE>&lt;RECORDS Functional&gt;: (4.0)</PRE>
<PRE>        &lt;RECORDS Captured&gt; (4.0a)</PRE>
<PRE>        &lt;RECORDS Maintained&gt; (4.0b)</PRE>
<PRE>        &lt;RECORDS Usable&gt; (4.0c)</PRE>
<PRE>&lt;RECORDS Captured&gt;:  (4.0a)</PRE>
<PRE>        &lt;RECORDS Comprehensive&gt; (4.0a1)</PRE>
<PRE>        &lt;RECORDS Identifiable&gt; (4.0a2)</PRE>
<PRE>        &lt;RECORDS Complete&gt; (4.0a3)</PRE>
<PRE>        &lt;RECORDS Authorized&gt; (4.0a4)</PRE>
<PRE>&lt;RECORDS Comprehensive&gt; (4.0a1):</PRE>
<PRE>        &lt;Create RECORDS  TRANSACTIONS&gt; (4.0a1a)</PRE>
<PRE>&lt;RECORD Identifiable&gt;: (4.0a2)</PRE>
<PRE>        &lt;Cited Transaction_Identifier(RECORD) Identifier(TRANSACTION)&gt; (4.0a2a)</PRE>
<PRE>        &lt;Identifier(RECORD) Unique&gt; (4.0a2b)</PRE>
<PRE>&lt;RECORD Complete&gt; : (4.0a3)</PRE>
<PRE>        &lt; RECORD Accurate&gt; (4.0a3a)</PRE>
<PRE>        &lt; RECORD Understandable&gt; (4.0a3b)</PRE>
<PRE>        &lt; RECORD Meaningful&gt; (4.0a3c)</PRE>
<PRE>                </PRE>
<PRE>&lt; RECORD Accurate&gt; (4.0a3a):</PRE>
<PRE>        &lt;Contains Content( RECORD) TRANSACTION  &gt; (4.0a3a1)</PRE>
<PRE>&lt; RECORD Understandable&gt;:  (4.0a3b)     </PRE>
<PRE>        &lt;Contains Presentation_Data(RECORD)  DATA_PRESENTATION &gt; (4.0a3b1)</PRE>
<PRE>        &lt;Contains System_Views(RECORD) SYSTEM_VIEWS&gt; (4.0a3b2)</PRE>
<PRE>        &lt;Contains Logical_Relations(RECORD) LOGICAL_RELATIONS&gt; (4.0a3b3)</PRE>
<PRE>        &lt;Contains Functionality(RECORD) FUNCTIONALITY&gt; (4.0a3b4)</PRE>
<PRE>        &lt;Contains Permissions(RECORD) PERMISSIONS&gt;(4.0a3b5)</PRE>
<PRE>&lt; RECORD Meaningful&gt; : (4.0a3c)</PRE>
<PRE>        &lt;Contains Business_Rules(RECORD) BUSINESS_RULES &gt; (4.0a3c1)</PRE>
<PRE>        &lt;Cited Transaction_Identifier(RECORD) Identifier(TRANSACTION) &gt; (4.0a3c2)</PRE>
<PRE>        &lt;Contains Record_Links(RECORD) BUSINESS_PROCESS&gt; (4.0a3c3)</PRE>
<PRE>&lt;RECORDS Authorized&gt; : (4.0a4)  </PRE>
<PRE>        &lt;Conduct TRANSACTION RESPONSIBLE_AGENT&gt; (4.0a4a)</PRE>
<PRE>        &lt;Equal Permission(AGENT) Permission(TRANSACTION)&gt; (4.0a4b)</PRE>
<PRE>        &lt;Permission(AGENT) Documented &gt; (4.0a4c)</PRE>
<PRE>&nbsp;</PRE>
<PRE>&lt;RECORDS Maintained&gt; :  (4.0b)</PRE>
<PRE>        &lt;RECORDS Preserved&gt; (4.0b1)</PRE>
<PRE>        &lt;RECORDS Removable&gt; (4.0b2)</PRE>
<PRE>&lt;RECORDS Preserved&gt;: (4.0b1)    </PRE>
<PRE>        &lt;RECORDS Inviolate&gt; (4.0b1a)</PRE>
<PRE>        &lt;RECORDS Coherent&gt; (4.0b1b)</PRE>
<PRE>        &lt;RECORDS Auditable&gt; (4.0b1c)</PRE>
<PRE>&lt;RECORDS Inviolate&gt;:  (4.0b1a)  </PRE>
<PRE>        &lt;Equal Content(RECORD ?T1) Content(RECORD ?T2)&gt; (4.0b1a1)</PRE>
<PRE>                </PRE>
<PRE>&lt;RECORDS Coherent&gt;:  (4.0b1b)   </PRE>
<PRE>        &lt;SYSTEM Changed&gt; (4.0b1b1)</PRE>
<PRE>        &lt;Equivalent Structure(RECORD ?T1)  Structure(RECORD ?T1)&gt; (4.0b1b2)</PRE>
<PRE>&lt;RECORDS Auditable&gt;:  (4.0b1c)  </PRE>
<PRE>        &lt;Use RECORD TRANSACTION&gt; (4.0b1c1)</PRE>
<PRE>        &lt;Log USE History(RECORD)&gt;  (4.0b1c2)</PRE>
<PRE>&lt;RECORDS Removable&gt;:  (4.0b2)   </PRE>
<PRE>        &lt;DELETE Authorized&gt; (4.0b2a)</PRE>
<PRE>        &lt;DELETE Audited&gt; (4.0b2b)</PRE>
<PRE>        &lt;DELETE Complete&gt; (4.0b2c)</PRE>
<PRE>&lt;DELETE Complete&gt; (4.0b2c)      :</PRE>
<PRE>        &lt;Content(RECORD) Deleted&gt; (4.0b2c1)</PRE>
<PRE>        &lt;Structure(RECORD) Deleted&gt; (4.0b2c2)</PRE>
<PRE>        &lt;NOT (Context(RECORD) Deleted)&gt; (4.0b2c3)</PRE>
<PRE>        &lt;NOT (History(RECORD) Deleted)&gt; (4.0b2c4)</PRE>
<PRE>&lt;RECORDS Usable&gt;        : (4.0c)</PRE>
<PRE>        &lt;RECORDS Exportable&gt; (4.0c1)</PRE>
<PRE>        &lt;RECORDS Accessible&gt; (4.0c2)</PRE>
<PRE>        &lt;RECORDS Redactable&gt; (4.0c3)</PRE>
<PRE>&lt;RECORDS Exportable&gt;: (4.0c1)   </PRE>
<PRE>        &lt;Equal Content(RECORD, ?SYSTEMA) Content(RECORD ?SYSTEMB)&gt;(4.0c1a)</PRE>
<PRE>        &lt;Equal Context(RECORD, ?SYSTEMA) Context(RECORD ?SYSTEMB)&gt;(4.0c1b)</PRE>
<PRE>        &lt;Equal PastHistory(RECORD, ?SYSTEMA) History(RECORD ?SYSTEMB)&gt;(4.0c1c)</PRE>
<PRE>        &lt;Equivalent Structure(RECORD, ?SYSTEMA) Structure(RECORD ?SYSTEMB)&gt;(4.0c1d)</PRE>
<PRE>&lt;RECORDS Accessible&gt;: (4.0c2)   </PRE>
<PRE>        &lt;RECORDS Available&gt; (4.0c2a)</PRE>
<PRE>        &lt;RECORDS Renderable&gt;: (4.0c2b)  </PRE>
<PRE>        &lt;RECORDS Evidential&gt;: (4.0c2c)  </PRE>
<PRE>&lt;RECORDS Available&gt;: (4.0c2a)   </PRE>
<PRE>        &lt;Operates RETRIEVAL_MECHANISM&gt;(4.0c2a1)</PRE>
<PRE>&lt;RECORDS Renderable&gt;: (4.0c2b)  </PRE>
<PRE>        &lt;Equivalent Display(RECORD ?TIME1) Display(RECORD ?TIME2)&gt;(4.0c2b1)</PRE>
<PRE>&lt;RECORDS Evidential&gt;: (4.0c2c)  </PRE>
<PRE>        &lt;Display USE History(RECORD) &gt;(4.0c2c1)</PRE>
<PRE>&lt;RECORDS Redactable&gt;: (4.0c3)   </PRE>
<P>Metadata Specifications for Evidence</P>
<P>Ideally a metadata specification for evidence could be completely deducible from the Production Rules version of the Functional Requirements for Evidence. We believe we have achieved such a specification and that it serves to identify the data required for such purposes as are proposed in the draft NIST standard for a "Record Description Record" or the Research Library Group/Commission on Preservation and Access Task Force on Archiving of Digital Information. We also believe this specification satisfies the needs for entries in electronic laboratory notebooks, electronic patient records and multivalent electronic commerce.</P>
<P>The functional requirements for record keeping dictate the creation of records that are comprehensive, identifiable (bounded), complete (containing content, structure and context), and authorized. These four properties are defined by the requirements in sufficient detail to permit us to specify what metadata items would need to describe them in order to audit these properties. This descriptive metadata cannot be separated from them or changed after the record has been created. Several additional requirements define how the data must be maintained and ultimately how it and other metadata can be used when the record is accessed in the future. The metadata created with the record must allow the record to be preserved over time and ensure that it will continue to be usable long after the individuals, computer systems and even information standards under which it was created have ceased to be.  The metadata required to ensure that functional requirements are satisfied must be captured by the overall system through which business is conducted, which includes personnel, policy, hardware and software</P>
<P>We envisage transactions taking place as metadata encapsulated objects, although records might not be physically stored in this manner. When transmitted, the contents of the transaction would be preceded by information identifying the record, the terms for access, the way to open and read it, and the business meaning of the communication much as a train of baggage cars is preceded by an engine. Metadata encapsulated objects may contain other metadata encapsulated objects, because records frequently consist of other records brought together under a new "cover", as when correspondence, reports and results of database projections are forwarded to a management committee for decision. They may also contain the information content of previous records which have been copied into an information system where the creator of this transaction has had the opportunity to modify them; in this case they may contain a citation to a previous record but would not contain the encapsulated version of the previous record.</P>
<P>Ideally the contents of all data objects that we want to communicate would be "interoperable" and encoded in standard formats to give them a degree of software independence (the actual degree depends on how long any given "standard" can be expected to remain a standard, which in archival terms is not very long). In any event, many data objects we create today will not be standard and the metadata with which we label them must flag the dependencies of the data (including their dependency on standards) so that a future review of record headers can locate sources of brittleness and segregate records requiring migration to new software formats before they become unreadable.(11)</P>
<P>Our concept of evidence makes it important to know when records were used and how, in what ways they were filed, classified and restricted in the past, and, if they have been destroyed under proper disposition authority, when and by whom that act took place. It is also important to us to know what redacted versions of records were released over time. Transactional data reflecting the history of its use (events in its life subsequent to creation), provides the documentation traditionally associated with archival description, but instead of such data residing only at aggregate levels, it is possible to define electronic records metadata structures that enable us to search for specific records based on information about the instance or concrete business transaction which generated them.</P>
<P>In addition to ensuring that the data we capture is a record, and can serve as evidence, metadata should be defined so that it makes data objects communicated across software and hardware layers (and therefore any communications over a network):</P>
<P>self-documenting</P>
<P>self-authenticating</P>
<P>self-redacting</P>
<P>self-migrating</P>
<P>self-disposing</P>
<P>These properties, while important for simplifying the management of records (especially in an inter-networked environment in which hundreds of millions of records are created daily), can be made to be direct consequences of keeping records if attention is paid to the structuring of the metadata that makes records evidence.</P>
<P>Furthermore, a system for metadata management which has appropriate modularity and content standardization can support formally auditing the business system which generated the information object transactions and the software, hardware, procedures and policies surrounding a system to determine where they contribute, or fail to contribute, to the creation, maintenance and use of evidence. While no system of management can be self-auditing, a communications system built to ensure that appropriate metadata is captured for evidence can support a level of management accountability that it was never previously possible to implement or enforce.</P>
<P>We recognize however that a specification based solely on necessary and sufficient conditions for recordness does not address certain other desirable functionalities of a business communications environment because evidentiality is not the only requirement for such a system. Among the other requirements we have seen being addressed in the effort to develop widely applicable models for network metadata management are:support for a system of access and use rights management support for networked information discovery and retrieval support for registration of intellectual property.</P>
<P>Therefore, we have proposed a draft Reference Model for Business Acceptable Communications that attempts to specifically address these additional requirements as part of a dialog that must take place between advocates of mechanisms to support these different fundamental purposes through an overall structure for metadata encapsulated objects. (12)</P>
<P>The Proposed Reference Model</P>
<P>The metadata elements needed to execute the production rules expression of the University of Pittsburgh Functional Requirements for Evidence possess no intrinsic order. Criteria for ordering these elements must be derived from scenarios of their anticipated use within an overall system of record keeping</P>
<P>The initial clustering of these data elements to achieve functional modularity, led researchers to organize them in six layers which they labeled:</P>
<PRE>                Registration</PRE>
<PRE>                Terms &amp; Conditions</PRE>
<PRE>                Structure</PRE>
<PRE>                Context</PRE>
<PRE>                Content</PRE>
<PRE>                History of Use</PRE>
<P>The addition of the requirements noted earlier from other object standardization efforts designed to provide support for a system of access and use rights management, for networked information discovery and retrieval and for registration of intellectual property suggests a need to add substantially to the properties identified as necessary for assurance of evidence, in layers devoted to identification and terms and conditions. In particular it suggests a need for "resolving" agents or services for dealing with terms and conditions of access or use and managing information discovery and retrieval for the aggregate resource of which a given record forms a part. This required us to introduce a resource descriptor element  (not present in the December 1994 draft) that points to a compilation of which the record might be a part and through which it would be accessed.</P>
<P>It was evident in the discussion of NIDR the Spring 1995 CNI meeting (13) that the kinds of relevance ranking and intellectual content representation for information retrieval functions being considered essential to the networked information discovery and retrieval requirement operate at a level of compilations, repositories or services for records of business transactions and that these publications, services, or repositories will have quite different descriptive data associated with them. Indeed this is consistent with the focus of the Library of Congress Electronic cataloging meeting in October 1994 and the recent announcement by OCLC of its intention to catalog Internet resources.</P>
<P>It was also clear from the discussion of network management issues associated with identification of intellectual property (14) that much more attention needs to be given to naming of objects in this domain than has been necessary for the more limited purposes of unique identification of evidence. The simplifying reality that no change can take place in a record and that any interaction with a record, even looking at it or forwarding it, creates a new record, ignores the social dependence of the concept of original creation at the foundation of intellectual property.</P>
<P>This (summer 1995) draft of the Reference Model, therefore, attempts to place the specific and limited requirements for metadata of evidence in the context of the other tasks that have been imputed to such descriptors. It does so by renaming the layer previously labeled "Registration" by the new name "Handle" indicating both the requirement for more robust methods of identification than are necessary to evidence and the need for documentation of the contents, or pointers to documentation of the contents, to facilitate discovery and retrieval. No effort is made here to elaborate on how these additional requirements could or should represent the information required to satisfy their further requirements, since this will best be done by the communities most concerned with that functionality. The clusters were described as "metadata/properties" reflecting the distaste expressed for the term metadata by spokesmen for these communities at the recent CNI meeting.</P>
<P>Rather than pursue these matters any further, this paper explores the metadata content required by the Functional Requirements for Record keeping which dictate mandatory and optional data elements within defined data clusters at each of the six layers of the metadata model. In certain areas, particularly regarding structural dependencies of data objects representing non-textual content, we have specified a potentially extensible set of modality specific data elements. This reflects the recognition that we can never completely specify the data that will be required to document the structural dependencies of future data types.</P>
<P>The clusters are part of the reference model and must always occur, but the optional metadata elements may or may not be present based on characteristics of the application. The metadata content directly related to satisfying requirements for evidence is mandatory. Hence evidence, required for the conduct of business and for accountability, is ensured by a "Metadata Encapsulated Object" conforming to the reference model for "Business Acceptable Communications". The metadata content which contributes to record keeping, or management of records, but is not essential to evidence, is optional. Metadata content useful for specific domains or business functions may be defined by those domains as mandatory for business in that domain or optional within the domain. All such metadata would be optional for anyone outside the domain. The layers and clusters of the reference model are shown in table 3, below.</P>
<P>Table 3: Reference Model for Business Acceptable Communications: layers and data clusters</P>
<PRE>        Handle Layer</PRE>
<PRE>                Registration Metadata/Properties</PRE>
<PRE>                Record Identifier</PRE>
<PRE>                Information Discovery and Retrieval</PRE>
<PRE>        Terms &amp; Conditions Layer</PRE>
<PRE>                Rights Status Metadata</PRE>
<PRE>                Access Metadata</PRE>
<PRE>                Use Metadata</PRE>
<PRE>                Retention Metadata</PRE>
<PRE>        Structural Layer</PRE>
<PRE>                File Identification &lt;Repeatable for each file&gt;</PRE>
<PRE>                File Encoding Metadata &lt;Repeatable for each file&gt;</PRE>
<PRE>                File Rendering Metadata &lt;Repeatable for each file&gt;</PRE>
<PRE>                Record Rendering Metadata &lt;for whole record&gt;</PRE>
<PRE>                Content Structure Metadata</PRE>
<PRE>                Source Metadata</PRE>
<PRE>        Contextual Layer</PRE>
<PRE>                Transaction Context</PRE>
<PRE>                Responsibility</PRE>
<PRE>                Business Function</PRE>
<PRE>        Content Layer</PRE>
<PRE>                Content-Description</PRE>
<PRE>        Use History Layer &lt;Repeatable Transaction Table&gt;</PRE>
<P>The purpose of specifying metadata as part of this model is to ensure recordness. When the metadata needed by a specialized domain has an essential application related purpose but is not required for recordness, it is preferable to satisfy this application purpose by definition of a standard interchange format. The interchange standard can be cited in the metadata for Business Acceptable Communications and the data content can then be opened by knowledge of the requirements and structures of the standard without further elaboration. This has the dual advantage of efficiency of definition and ease of migratability as all records corresponding to a specified protocol can be re-presented in a new standard if the old format is superseded.</P>
<P>Implementation Issues</P>
<P>How can the Reference Model be implemented?</P>
<P>We imagine two possible scenarios for the long term: in the first, each organization implements its own methods for capturing metadata and encapsulating objects, while in the second the requirement is imposed on software developers and networks as a consequence of standards adopted by their clients. In either case, any implementation must acknowledge that the level of analysis and documentation at which computer mediated communications are evidence is that of the individual business transaction. This means that we are not concerned with capturing metadata at higher levels, such as that of the resource or lower levels such as that of a single document, data item/file, or computer system transaction. It also means that the data and metadata we capture must always be related back to a specific transaction whether corporate or personal. It also requires that we be able to incorporate multiple physical files within a single record, and any number of prior records within a new record.</P>
<P>Practically, one might view the implementation of metadata recording and management as a continuum.  At one end, all of the metadata is encapsulated, stored and transported with the record.  The record in this case is physically self explanatory.  The problem with this is that a high amount of overhead is associated with every action taken with a record. The opposite approach would be to store none of the metadata with the record.  The metadata would be stored in a data base on a kind of archival server and each record would contain a pointer to its metadata.  While this approach avoids the overhead associated with communicating records, it requires more sophisticated management and is susceptible to problems associated with corrupt pointers decoupling a record from its metadata.</P>
<P>The actual implementation adopted by an organization will probably lie somewhere between these two extremes.  In the inter-organizational exchange of records, the first model must be used.  For intra-organizational use it is likely that an intermediate approach is used.  Some metadata will be encapsulated and carried with the record,  particularly metadata that will be used by subsequent processes or procedures. Other metadata such as citation of business rules, standards and legal authority will be stored in a data base and referenced by pointers encapsulated with the record.</P>
<P>Very few existing information systems are designed to execute business rules or document business processes. Therefore they will currently typically create a new computer record for a software transaction which involves no business transaction but changes the data in the system (such as background saving of a file on which I am working) but create no record of common business transactions which do not change data in the system but nevertheless require evidence (such as querying a database for decision support). Implementation will need to impose the concept of business transactions, rather than that of systems transactions, on their environment. In addition, they will need to interface with business process models to capture appropriate identifying data.</P>
<P>It would be possible to design application software that did recognize business transactions boundaries but the differences between organizations would likely make implementing such software complex and maintaining its knowledge of local business processes costly. Nevertheless, certain parameterized features of application systems can already be employed to ensure the satisfaction of some of the functional requirements for record keeping For example, word processing systems can support corporate record creating requirements if the users of such systems exclusively employ style sheets defined in such a way as to distinguish between transactions based on their process location and business purposes. Geographic information systems often have reporting features that allow the user to create output files of all the relevant layers of data incorporated into a query response.</P>
<P>At least in the short term, however, the need to create electronic records with metadata conforming to the reference model will require systems implementers (possibly in cooperation with users) to construct traps outside of applications software in which they can capture the metadata required for evidential transactions. Assuming no changes were made in applications systems, implementers could capture some of the requisite data items in the user interface layer. For example, by enhancing the information captured when users sign on to the system so that authorizations, logical business location, and types of transactions allowed to an individual are brought into the system memory for assignment to transactions as needed. They could then provide icons representing the business tasks in which a user may engage (based on process data models and business rules of the organization) rather than icons representing software applications.</P>
<P>Indeed the user interface could easily be designed so that users never open software applications directly, but rather they engage special 'clients' which open and configure the application software in a way that utilizes its style sheets, macros, self-documenting features, for the particular business function in which the user is engaged. This way only clients representing specific business processes can be admitted and the rules governing such uses can be imposed on the system. These clients could then provide the necessary metadata to identify the business transaction when a record of it is created.</P>
<P>Alternatively, or in conjunction with user interface interventions, implementers could develop an "evidence" service in the Application Platform Interface to capture transactions addressed in particular ways and assign them metadata attributes required to ensure their authenticity and survival. Such a service could be customized with the rules of a particular business so as to identify transactions of specific types and adhere to the appropriate retention periods, access and use rights, and filing rules.</P>
<P>Finally, information systems staff could identify components in the systems architecture, from storage devices serving as corporate file rooms to telecommunication switches linking to other LAN's, WAN's or systems, which assigned yet other metadata attributes to records when they were communicated. Thus records filed in certain places and under particular headings would be given metadata attributes upon arrival at the filing server application. Records deemed to be lacking appropriate metadata to leave an organizations' boundaries, or even to pass outside the LAN serving one work group, could be assigned those attributes or returned to sender to provide the necessary descriptors. In conjunction with corporate policy and procedure individuals could participate in completing document routing and description templates for all transactions, or be required to default to pre-set templates for a series of identical transactions.</P>
<P>One of the questions that must be answered by research is whether some metadata elements are easier to capture in certain layers of the architecture than others. We believe that certain of the metadata required for recordness, specifically that pertaining to compliant organizations and accountable systems, will best be documented by means other than transaction level metadata capture because of the inherent inefficiency of capture of such systemic proofs at a transaction level and the difficulty of a system ascertaining the state of organizational compliance or of its own logical correctness.</P>
<P>In sum, it appears that through a combination of policy, implementation and design, and standards, an organization can ensure that only "business acceptable communications" are generated from its information systems, maintained in its record keeping systems, and made available through to its information retrieval systems.</P>
<P>Implementers will recognize that when a user requests a record, a copy of that record is passed to the information retrieval sub-system, but if the user opens the record contents under the control of another application, the contents are incorporated within the application in which he or she is working and will become part of the contents of a new transaction. If the user intends only to append or forward a record, this does not involve opening the record and may, in some environments, be accomplished by pointing to it while in others it will involve incorporating an encapsulated version of the record within the current transaction. When users generate a communication in this environment, a "Business Acceptable Communication", encapsulated by metadata necessary to ensure its integrity and longevity, would presumably be split off from the information system stream and sent to a record keeping system or warehouse where it would be kept intact. Another version of the transaction would normally remain within the application environment where it would be available for further manipulation, update and editing, or would do the jobs of updating databases, launching procedures or generating reports in that environment. From the perspective of the business, all data in information systems can be treated as a convenience copy, to be kept as long as required for on-going business purposes and to be altered as desired to increase efficiency.</P>
<P>When needed, records from record keeping systems may be copied to information systems which need require their content, but the record itself will never be deleted from, or changed within, the record keeping system except with specific records disposition authority. Record keeping systems will store and provide access to metadata encapsulated objects. Sometimes the purposes of such access will be to make use of the data content of records in subsequent business transactions which create their own records. These transactions will take place through application systems, which like most information systems, are not designed to make or keep records.</P>
<P>Sometimes the purpose of access is simply to view the records outside of the business purposes of the creating organization. Traditionally such reference uses of archives have not created new records, although logically they are the record of the use of the archives which is itself a function of the organization. In an evidential environment, viewing a record in conjunction with a business transaction creates a new record for the record keeping system and leaves a transaction trail in the original record.</P>
<P>There is no specific computing model that must be employed in the maintenance of record keeping systems although it may seem that the discussion of communicated transactions to this point has used the terminology of object orientation. Once these transactions are communicated (typically by a serial process but always in such a way as to produce a serial record on the receiving end, and hence as an encapsulated object), they can be treated as if the metadata was structured database information in a standard relational, hierarchical or flat file database management system. A simple method for doing this securely would be to store a hash of the contents in the metadata record and a hash of the metadata record with the contents.</P>
<P>Logically, metadata content must either follow an external standard or contain its own declarations (e.g.,. meta-meta-data). It would be greatly more efficient for the society at large if instead of requiring individual organizations to implement systems in ways that supported the requirements for evidence, a standard for communications could be adopted that placed the burden for creating metadata encapsulated objects on the application software and network software developers.</P>
<P>The definition of a standard for Business Acceptable Communications presumes the existence of software and services that can use the metadata which must be associated with an object. Specific types of services, for example, are envisioned to follow up on address information contained in Terms and Conditions metadata layer to translate it into concrete prices, permissions, and data views. The presumption is that Terms and Conditions metadata will be expressed in abstract categorical terms, not in concrete terms so that it can be processed correctly as the situation variables (inflation, changes in permissions based on elapse of time since the event, re-engineered business processes, etc.) change. The model for implementing control based on Terms and Conditions is that a "resolver" will be put in place by the owner/creator of a record that is designed to operate against the categorically expressed terms and conditions data in a dynamic manner. This allows the terms and conditions to be calculated for the moment, based on the user, and sensitive to the conditions of use. It is envisioned that these applications will be maintained by those interested in restricting rights and their functionality can be ensured in part by establishing a mechanism that allows users access to the records if no restrictive permissions manager is operating.</P>
<P>Conclusions:</P>
<P>The Reference Model for Business Acceptable Communications discussed here and proposed in the accompanying formal presentation, builds upon and extends work underway in standards committees in many areas. It attempts to provide a generic structure and theoretical grounding for work items proposing metadata encapsulated objects as a tactic for interchange. While it will doubtless be refined before a fully acceptable reference model is adopted, it is our hope that the formulation of this model will place the functional requirements for evidence at the heart of any discussion of what makes a business communication acceptable.</P>
<P>The Reference Model acknowledges, but does not solve, some fundamental problems in the distributed network environment. For example, a major concern is how the identifier uniquely assigned by one domain is guaranteed to be unique when the object is incorporated into a universe in which identifiers assigned by other domains are present. Obviously uniqueness can be ensured by combining a unique identifier within a domain with a unique identifier for the domain. The problematic aspect of this is that domain identifiers need to be truly unique to a person or organization but we want to define a system in which the domain identifier does not have to carry too much intelligence and yet can be meaningfully related to its successor and precursor identifiers. Also, it must be possible to issue domain identifiers without serious overhead. Billions of unique business transactions will flow through worldwide communications systems within and between organizations and between individuals and/or computers, daily. It must be possible to uniquely identify all these. Mechanisms for unique identification of computing systems and sources of communications are being worked out for such open domains as the Internet (by the IETF) but also need to be developed within specific corporate communications contexts.</P>
<P>It may also be necessary to search for records that satisfy criteria based on their content, even though this is not essentially an archival requirement. The Reference Model is designed to hold metadata that can satisfy such requirements but it is not currently populated by metadata designed to support NIDR. Recent work on this area by the Coalition for Networked Information and by the U.S. library community may define structures within this cluster although the problems of defining what records are "about", rather than what they are "of" has been a vexing one since the advent of archives. The volume of records that are created has always defied cataloging individual records and the content description of records, which are not created to be about their content but rather as a consequence of business transactions, tends in any case to be either misleading or inadequate. Substantial practical research will continue to be required to determine how best to provide access to records of specific kinds or records documenting particular types of transactions.</P>
<P>Another concern is how as a practical matter, to best monitor metadata values in order to make the necessary software migrations at appropriate times in the life of records. Not only do we need to make sure to migrate the records to new structures before the old ones are no longer supported, we need to make good decisions about logical mappings in order not to introduce too much noise with every migration and ultimately lose the message in digital copying as surely as with did with multi-generational copying of analog messages. Needless to say, some people also worry that these software migrations, if they continue to need to be done as often as once a decade or more, will become too costly to support and that as a consequence some records of value will be abandoned. Within the environment in which record keeping takes place, stringent approaches to configuration management will be essential to ensure that record documentation retains critical usable metadata.</P>
<P>At the same time, it is noteworthy that the proposed approach to archiving and to maintenance of business acceptable communications does not require us to include information about physical formats and media within the record metadata. Rather the environment in which records are kept will need to be one in which managers move data from one medium to another as required to assure backup and preservation of the data. It is presumed that media that are currently supported will always be used and that data transfer to current media will take place in the normal course of operations. Documentation of the data processing center backup and recovery functions is not part of the model because the model presumes that day-to-day data management will be responsible.</P>
<P>Footnotes/Citations</P>
<P>1) The Functional Requirements for Record keeping project has compiled a database of "warrant" for the requirements we have defined. The most up-to-date version of the requirements, specifications, production rules, metadata standards, literary warrant and research papers on the variables in electronic record keeping in organizations are maintained on the project WWW server at:</P>
<P></P>
<P>http://www2.lis.pitt.edu/~sochats/nhprc.html</P>
<P>Examples of the kinds of sources from which "literary warrant" has been drawn include:</P>
<P>Code of Federal Regulations, 36 CFR PART 1234 -- Electronic Records Management. Subpart C -- Standards for the Creation, Use,    Preservation, and Disposition of Electronic  Records</P>
<P>Electronic Industry Data Exchange. ASC 12 Convention: Version 3: Electronic Industry Data Guidelines. Washington Publishing Co., 1994   Federal Rules of Evidence. 1990</P>
<P>Guttman, B.Computer security considerations in Federal procurements. National Institute of Standards and Technology, NIST Pub 800-4</P>
<P>Institute of Internal Auditors Research Foundation. Systems Auditability and Control Report. Researched by Price Waterhouse, 1991</P>
<P>IS0 9001 Quality systems - Model for quality assurance in design/development, production, installation and servicing, 1987</P>
<P>FIRMR:  federal information resources management regulation. Washington, DC : U.S. General Services Administration, Office of    Information Resources Management, 1990</P>
<P>McCormick on Evidence. 4th ed. by John William Strong, general editor. (St.Paul, Minn: West Pub. Co, 1992)</P>
<P></P>
<P>Miller, Larry P., GAAS guide: a comprehensive restatement of all current promulgated generally accepted accounting principles.    San Diego : Harcourt Brace Professional Pub.; 1994</P>
<P>2) for an example, see: IEEE Mass Storage Systems Standards Technical Committee Metadata Project, Second Meeting on Metadata for the Administration and Access of Stored Information, Austin Texas February 17-18, 1994. Documents discussed at this meeting included:</P>
<UL>
<LI>"The Intelligent Archive" (UCRL-TB-115079-6 Lawrence Livermore Laboratory, Carol Hunter Project Manager)</LI>
<LI>"Whitepaper on Data Management", Robyne Sumpter, Lawrence Livermore Laboratory Feb.10, 1994</LI>
<LI>"A Metadata Capability Supporting the Hierarchical Storage and Access of Large Abstract Data Entities", J.C.Almond and Rekha Singhal, University of Texas CHPC</LI>
</UL>
<P>3) for example, see:</P>
<P>Clifford Lynch, "The Integrity of Digital Information: Mechanics and Definitional Issues", Journal of the American Society for Information Science, vol.45#10, December 1994 p.737-744;</P>
<P>Peter Graham, "Intellectual Preservation in the ElectronicEnvironment", Proceedings, Library Collections and Technical Services1992 pp.18-32 (Chicago, ALA, 1992);</P>
<P>Henry Perritt, "Public Information in the National Information Infrastructure", Report to the Regulatory Information Service Center,General Services Administration and to the Administrator, Office of Information and Regulatory Affairs, Office of Management and Budget,5/20/94</P>
<P>Other activities, currently underway, to which the reference model seems relevant are the Research Libraries Group and Commission on Preservation and Access Joint Task Force on Archiving Digital Documents, the Coalition for Networked Information sponsored working group on Networked Information Discovery and Retrieval, and the National Institute of Standards proposed Federal Information Processing Standard for "Record Description Records".</P>
<P>4) New York State Archives &amp; Records Administration, Guidelines for the Legal Acceptance of Public Records in an Emerging Electronic Environment (Albany, Dept. of Education, 1994) 35pp.</P>
<P>5) David Bearman, Electronic Evidence: Strategies for Managing Records in Contemporary Organizations (Pittsburgh, Archives &amp; Museum Informatics, 1994)</P>
<P>6) NHPRC grant #93-030, "Variables in the Satisfaction of Requirements for Electronic Records Management"</P>
<P>7) David Bearman and Ken Sochats, "Formalizing Functional Requirements for Record keeping" unpublished draft paper included in University of Pittsburgh Record keeping Functional Requirements Project: Reports and Working Papers (LIS055/LS94001) September 1994</P>
<P>8) David Bearman, Functional Requirements for Record keeping: Metadata Specification (Unpublished Draft, 2/21/94)</P>
<P>9) References to:</P>
<PRE>        Datastream for Folder Interchange (ISO 161/17-WG6 NWI)</PRE>
<PRE>        Electronic Document Interchange (EDI) standards, including EDIFACT</PRE>
<PRE>        ATM protocols</PRE>
<PRE>        Spatial Data Interchange Format (SDIF) and DIGEST </PRE>
<P>10) David Bearman, "Electronic Records Management Guidelines: A Manual for Development and Implementation" in United Nations, Administrative Coordinating Committee for Information Systems, Management of Electronic Records: Issues and Guidelines (New York, UN, 1990) reprinted in Electronic Evidence, op.cit.fn5</P>
<P>11) There is a consensus that "preservation" in electronic environment means refreshing. For an early, but still sound, articulation of the reasons, see:  Margaret Hedstrom, "Optical Disks: Are Archivists Repeating the Mistakes of the Past?", Archives &amp; Museum Informatics Newsletter, vol.2 (1988) p.52; also her "Electronic Archives: Integrity and Access in the Networked Environment" in Stephanie Kenna and Seamus Ross, eds., Networking in the Humanities (London, Bowker/Saur, 1995) p.77-95</P>
<P>12) We believe this model takes into account requirements such as those implied by the plans of the German Government for its move from Bonn to Berlin over the next decade. In that planning process they it has become obvious that much of the communication between governmental departments will take place electronically between individuals with little if any face to face contact who will require secure and authenticated communications and the ability to make and keep records. In defining an architecture to support these requirements, the PoliTeam, established for this purpose, defined an architecture that could take advantage of the functional requirements for record keeping, but they did not identify those requirements. In reforms in the Dutch civil service over the past several years, earlier opening of government records was one objective, 
and the studies undertaken to support this goal revealed a need to begin to plan for electronic communications systems. In their reforms, the Dutch government has begun to take advantage of the functional requirements for record keeping and is encountering many of the same issues of metadata management being addressed by this paper. The Canadian government has been defining "Guidelines on the Management of Electronic Records in the Electronic Work Environment" as a component of the "Electronic Work Environment (EWE) Vision" being promulgated by the 
Canadian Treasury Board. Popularizations of the implications of these activities have been published recently by Terry Cook in "It's 10 O'Clock, Do You Know Where Your Data Are", Technology Review, January 1995; also his, "Electronic Records, PaperMinds: The Revolution in information Management and Archives in the Post-Custodial and Post-Modernist Era, Archives &amp; Manuscripts, vol.22#2, p.300-328</P>
<P>13. Clifford Lynch presentation (unpublished)at the Coalition for Networked Information Meeting, Spring 1995</P>
<P>14. Bill Arms presentation (unpublished) at the Coalition for Networked Information meeting, Spring 1995</P>
<P>APPENDIX A. REFERENCE MODEL FOR BUSINESS ACCEPTABLE COMMUNICATIONS[version Nov.1, 1995; format by Kimberley Barata and Wendy Duff]</P>
<P>I. HANDLE LAYER</P>
<P>Flags the following data as a record and assigns distinguishing identifiers indicating the record's domain, from which the provenance derives.  In addition, descriptors are identified in this layer to enable retrieval.</P>
<P>I.A. Record Identifier/Registration Metadata</P>
<P>The purpose is to create a unique identifier made up of a code of three (3) data elements (Record-Declaration, Domain-Identifier, Instance Identifier).</P>
<P>I.A.1. Record-Declaration [Mandatory]</P>
<P>Identifies the data as a record.  This data element consists of a standard bit stream asserting that what follows is a record.</P>
<P>I.A.2. Domain-Identifier [Mandatory]</P>
<P>Identifies the domain from which the record originated.</P>
<P>I.A.3. Instance-Identifier [Mandatory]</P>
<P>This code may consist of a combination of a transaction ID and a sequential instance number.</P>
<P>I.B. Information Discovery &amp; Retrieval Data (Repeatable)</P>
<P>Provides the search terms necessary to retrieve the record at a later date.</P>
<P>I.B.1. Descriptor-Type [Optional]</P>
<P>Identifies a type of standardized heading(s) given the record to enable retrieval - should be domain specific.</P>
<P>I.B.2. Descriptor-Term [Optional]</P>
<P>Specific standardized recognizable terms used within the record that may enable retrieval.</P>
<P>II. TERMS &amp; CONDITIONS LAYER</P>
<P>Invokes security measures controlling the potential use of a record.  Recognizes and acknowledges the level of permission given a user, identifies if payment is necessary in order to use the record and then arranges for the transfer of payment, redacts records based on the level of privacy, confidentiality, or secrecy outlined in tables set by the system.</P>
<P>II.A. Rights Status Metadata</P>
<P>Identifies the initial security parameters - establishes the terms of access and use.</P>
<P>II.A.1. Access-Rights-Status [Mandatory]</P>
<P>Identifies the various levels of access permissions that any given user may have.  These are meaningful only to the access resolver and are assigned by the creating organization when the record is created.  It should be noted that this  may also carry a value of null if there are either no restrictions on access or if the organization does not maintain a resolver.</P>
<P>II.A.2. Use-Rights-Status [Mandatory]</P>
<P>Identifies the various levels of use permissions that any given user may have.  These are meaningful only to the use resolver and are assigned by the creating organization when the record is created.  It should be noted that this  may also carry a value of null if there are either no restrictions on access or if the organization does not maintain a resolver.</P>
<P>II.B. Access Metadata</P>
<P>Identifies access parameters - i.e. the conditions regarding access.</P>
<P>II.B.1. Access-Basis [Mandatory]</P>
<P>Identifies the basic conditions of access.  Access (unrestricted or restricted) may be determined by any number of possible resolvers that would identify any applicable payments, permissions, identities, times of use, etc.  Consists of pointers to these various resolvers.</P>
<P>II.B.1.a. Payment-Terms-Resolver-Address</P>
<P>[Mandatory for restricted data only]  Recognizes if payment is required to use the record.</P>
<P>II.B.1.b. Permission-Terms-Resolver-Address [Mandatory for restricted data only]</P>
<P>Identifies the various views of the record permitted the user.</P>
<P>II.B.1.c.</P>
<P>Identity-Terms-Access-Resolver-Address [Mandatory for restricted data only]  Identifies the address to which identification data needed to enable a dialogue with the user must be sent.</P>
<P>II.B.1.d. Time-Rule-Resolver-Address [Mandatory for restricted data only]</P>
<P>Identifies the length of time the user is permitted to view the record.</P>
<P>II.C. Use Metadata</P>
<P>Identifies use parameters - i.e. the conditions regarding use.</P>
<P>II.C.1. Use-Basis [Mandatory]</P>
<P>Identifies the basic types of authorized use of the record's content (i.e. unrestricted, view only, licensed, etc.).</P>
<P>II.C.1.a. Use-Citation [Optional]</P>
<P>Comprised of textual information supplied by the rights owner of the record - i.e. policies governing use.</P>
<P>II.C.1.b. View Only-Copy Protection-Key [Optional]</P>
<P>Disallows the ability to copy the record electronically.</P>
<P>II.C.1.c. License-Terms-Resolver-Address</P>
<P>[Mandatory for Licensed Data]  If the data is licensed, this enables the proper resolution of use of the record according to the guidelines set by the license.</P>
<P>II.D. Retention Metadata</P>
<P>Identifies retention parameters - i.e. the conditions regarding retention.</P>
<P>II.D.1. Removal-Authority [Mandatory]</P>
<P>Identifies under whose/what authority a record (whole or in part) may be purged from the system.  The identification of this authority resides with the record and is established at the time of the record's creation.</P>
<P>II.D.2. Retention-Policy-Citation [Optional; good practice]</P>
<P>Comprised of textual information identifying the organization's internal policy/policies for record's retention - indicates the specific policy number(s)  governing retention.</P>
<P>II.D.3. Retention-Law/Regulation-Citation [Optional; good practice]</P>
<P>Comprised of textual information regarding the legislative or governmental law(s)/regulation(s) governing record retention (ex. Code of Federal Regulations) - indicating the specific legal/regulatory policy number, version, dates issued, dates effective, etc.</P>
<P>II.D.4. Retention-Law/Regulation-Authority [Optional; good practice]</P>
<P>Comprised of textual information identifying the issuing organization that has jurisdiction over the law(s)/regulation(s) governing records retention.</P>
<P>II.D.5. Retention-Period-End-Time [Mandatory]</P>
<P>Indicates scheduled retention period end date (mmddyy) for the record. This information is determined at the time of the record's creation.</P>
<P>II.D.6. Disposition-Instruction-Code [Optional]</P>
<P>Identifies the actual methods that apply to the ultimate disposition of the record.  This information may be determined at the time of the record's creation and is included in it's textual form.</P>
<P>III. STRUCTURAL LAYER</P>
<P>Enables  the record's ability to  be utilized over time, as opposed to becoming unusable due to hardware/software obsolescence.  Allows for the ability to indicate when migration of the data is necessary.</P>
<P>III.A. File Identification (Repeatable for each file)</P>
<P>Enables the identification of individuals files that comprise a record and affords the ability to verify their authenticity.</P>
<P>III.A.1. File-ID [Mandatory]</P>
<P>Identifies each file that makes up a record.  This affords the ability for the system to bring together all of the parts to form the whole.</P>
<P>III.A.2. File-Authentification-Key [Mandatory]</P>
<P>Enables the system, through the use of an algorithm, to verify that the record's content has not been modified - in addition, it disallows the creator to reject the authenticity of the record.</P>
<P>III.B. File Encoding Metadata (Repeatable for each file)</P>
<P>Identifies the types of encoding pertinent to the individual files that comprise a record.</P>
<P>III.B.1. File-Modality [Mandatory]</P>
<P>Identifies what type of file is being dealt with by the system (i.e. text, numeric, graphic, geographic, image, sound, video, multi-sensory, etc.).</P>
<P>III.B.2. File-Encoding-Base [Mandatory]</P>
<P>Could default to digital base 2.</P>
<P>III.B.3. File-Data-Encoding-Type [Mandatory]</P>
<P>Identifies what type of encoding was used to capture the data identified by the File-Modality (i.e. character or ASN.1, vector,raster, sampled, matrix, cartesian grid, CAD/CAM, object code, etc.).</P>
<P>III.B.4. Data-Code [Mandatory]</P>
<P>Indicates specifically how the data is coded:</P>
<BLOCKQUOTE>
<P>Character: ASCII, EBCIDIC, UNICODE, etc.</P>
<P>Vector: topological, spaghetti, chain-node, etc.</P>
<P>Raster: no. of samples per second</P>
<P>Sampled: no. of samples per second</P>
<P>Matrix: grid: attribute</P>
<P>Each other data type...</P></BLOCKQUOTE>
<P>May require a great deal of actual data coding if the code is not standard.</P>
<P>III.B.5. Compression-Method [Mandatory]</P>
<P>Identifies the method of compression, if any, that was used (ex: None,JPEG, MPEG, Quicktime, LZW, etc.).  If the method complies to aspecific standard, this may consist of only the identification of that standard (name, version, etc.), as opposed to consisting of the actual code.</P>
<P>III.B.6. Encryption-Key: Address [Mandatory]</P>
<P>Identifies the algorithms used by the record originator to encrypt the record's content.  This may consist of a daemon that would make sure this has an address at all times.  If the address is not maintained, it would need the ability to roll back and unencrypt the data.</P>
<P>III.C. File Rendering Metadata (Repeatable for each file)</P>
<P>Identifies how the record was created in order to recreate it as it would have been viewed at the time of creation.</P>
<P>III.C.1. Application-Dependency [Mandatory]</P>
<P>Indicates which operating system application, if any, the record is dependent upon.  If there is a dependency, the name of the application, the version, and registration information may be recorded at the time of record creation.  This information is to represented as a pointer to the actual registered library that may be maintained by an organization, such as the Copyright Office or Patent Office.</P>
<P>III.C.2. Software-Environment-Dependency [Mandatory - Repeatable]</P>
<P>Indicates what software, if any, the record is dependent upon.  If there is a dependency, the name of the software package(s), the version, registration information, display information, and font sets (all software dependent attributes) may be recorded at the time of record creation.</P>
<P>III.C.3. Hardware-Dependency [Mandatory - Repeatable]</P>
<P>Indicates what hardware, if applicable, the record is dependent upon. If there is a dependency, the hardware needed, model number,configuration, and drivers required (all hardware dependent attributes)may be recorded at the time of record creation.</P>
<P>III.C.4. Rendering-Rules [Mandatory; Modality specific/domain specific]</P>
<P>Identifies the procedures necessary to enable the record to be displayed, printed, or otherwise represented as it had been at the time of creation (macros, dimension, spatial reference data, etc.) - may operate at different levels.</P>
<P>III.C.5. Dimensions [Mandatory]</P>
<P>Identifies what kind of chunks the data consists of - both modality and domain specific.  Consider burying in File-Encoding-Metadata</P>
<P>III.C.6. Metrics [Mandatory]</P>
<P>Identifies what portion of the following bit stream should be chunked together, as well as how to chunk the bits of data.  It also identifies what is actually being represented by each chunk (a word, a color, 32bytes of 8 bit code, etc.).  It enables the system to determine what portion of the structure of a record a given bit stream represents when rendered - i.e. how should it been viewed?.</P>
<P>III.C.7. Representation-Standard/De Facto Standard [Mandatory]</P>
<P>Identifies any standard(s) applied to the file that affect how the file is rendered (ex: SGML, Postscript, TIFF, etc.).</P>
<P>III.C.8. Representation-Standard-Version [Mandatory]</P>
<P>Identifies the version number or date used to identify which version of the standard was used.</P>
<P>III.D. Record Rendering Metadata</P>
<P>Applicable to the record as a whole.</P>
<P>III.D.1. File-Linking-Rule/Standard [Mandatory]</P>
<P>Identifies the rules or standards required to enable the necessary linkages between files that make up the record.  Contains textual information regarding the actual rules or standards applied.</P>
<P>III.D.2. File-Interchange-Standard: Version [Mandatory]</P>
<P>Identifies the standard(s) (including identifying the appropriate version) employed by the record to enable file interchange.</P>
<P>III.E. Content Structure Metadata</P>
<P>Enables the correct structural order necessary to create the right relationships between substructures.</P>
<P>III.E.1. Content-Structure [Mandatory]</P>
<P>Indicates whether the content of the record is structured or unstructured.</P>
<P>III.E.2. Content-Data Set [Mandatory]</P>
<P>If the content is identified as being structured, the data set indicated how it is structured (i.e. what type of data set was used, ex: DTD, etc.).  This consists of the actual name of the data set definition.  If a data set definition is neither registered or a well-known registered identity, then it will need to be registered.</P>
<P>III.E.3. Application-Dictionary [Mandatory, if no other content data set]</P>
<P>Identifies the data dictionary for the entire database.  This consists of the actual data dictionary itself - or it could take the form of a set of referential integrity controls.</P>
<P>III.E.4. Delimiters/Labels [Mandatory]</P>
<P>Consists of the actual delimiters/labels used throughout the data.</P>
<P>III.E.5. Data Value-Lookup Tables [Mandatory, where existing]</P>
<P>Consists of the authority file containing the values of the codes used throughout the record.</P>
<P>III.E.6. Data View-at Creation [Mandatory, if partial view]</P>
<P>Identifies how the application viewed the record at the time of the record's creation.  This is the redaction subset of the data dictionary.</P>
<P>III.E.7. Version-Relationships [Mandatory, if prior version exists]</P>
<P>Consists of any Record-Identifiers or File-IDs identified as belonging to previous versions of the record or file.</P>
<P>III.E.8. Set-Relationships [Mandatory, if other set members exist]</P>
<P>Identifies if the record belongs to an overall set of records.  If so, this contains the Record-Identifier(s) of other records belonging to that set - passive with respect to each other.</P>
<P>III.E.9. Hierarchical-Relationships [Mandatory, if higher/lower exists]</P>
<P>Identifies what data is required from other records/files in order to populate other values.  This is active in set relationships where a record cannot be opened unless other records are used.</P>
<P>III.E.10. Domain-Description-Standard [Optional]</P>
<P>Identifies what standards were employed to structure the domain description.</P>
<P>III.E.11. Domain-Access-Terminology [Optional]</P>
<P>Identifies those terms used by the office of origin to describe and/or</P>
<P>index the object.</P>
<P>III.F. Source Metadata</P>
<P>Identifies the source of the record and any relevant documentation that illustrates the functional responsibility environment.</P>
<P>III.F.1. Data Source-Type [Mandatory]</P>
<P>Identifies the type of source that created the data  - refers to the actual record keeping system.</P>
<P>III.F.2. System-Data Source-Documentation</P>
<P>[Mandatory, if system is source]</P>
<P>Identifies the documentation that outlines the conditions needed to create the record - contains information on the data processing function.  Consists of the actual documentation itself.</P>
<P>III.F.3. Data Capture-Instrument-Type [Mandatory, if instrument]</P>
<P>Identifies what type of instrument was used to capture the data (i.e. light recording, sound recording, temperature recording, location recording, etc.).  Consists of actual information about the instrument used (manufacturer, model number, etc.)</P>
<P>III.F.4. Data Capture-Instrument-Documentation [Mandatory; Domain Specific]</P>
<P>Identifies any relevant documentation about those instruments used to collect the data.  Consists of information on what settings, calibration, etc. were in effect when the data was captured.</P>
<P>III.F.5. Source-Data-Natural Language [Optional]</P>
<P>Identifies what language the data was recorded in (ex: English, French, Portuguese, German, etc.).</P>
<P>III.F.6. Source Data-Quality [Optional, Domain Specific]</P>
<P>Identifies the degree of reliability of the data generated by the source - established  in the system's  authority files.  Must ensure that the source data is replicated exactly to reflect those values established at the time of the record's creation.</P>
<P>IV. CONTEXTUAL LAYER</P>
<P>Identifies the provenance (i.e. the person, system, or instrument that is responsible for generating the record) of the record/data to maintain its use as evidence of a transaction and verify the record's accountability.</P>
<P>IV.A. Transaction Content</P>
<P>Identifies contextual information regarding the transaction - i.e. what is it a record of?</P>
<P>IV.A.1. Originator-Identification [Mandatory]</P>
<P>Identifies the organization or person that initiated the transaction.</P>
<P>IV.A.2. Recipient-Identification [Mandatory]</P>
<P>Identifies either the office/position that serves as the recipient of the transaction.</P>
<P>IV.A.3. Copy-Identification [Mandatory]</P>
<P>Identifies whether the copy encapsulated by the metadata is the sender's or the recipient's copy.</P>
<P>IV.A.4. Business-Transaction-Type [Optional]</P>
<P>Identifies the type of transaction, as well as the function that the transaction is a result of, that was being engaged in when the record was created - requires content specific naming.</P>
<P>IV.A.5. Business-Transaction Procedure Reference [Optional]</P>
<P>Identifies the originating organization's specific policy/policies and/or procedure(s) (i.e. business rules) governing the nature of the transaction.  Consists of the actual policy/policies and/or procedure(s) - noting the relevant version, effective dates, etc.</P>
<P>IV.A.6. Linked-Prior Transaction [Mandatory, if applicable]</P>
<P>Identifies the Record-Identifier(s) for a record that is part of the same business activity - defines what the members of a set may be.</P>
<P>IV.A.7. Action-Requested [Optional, good practice]</P>
<P>Identifies if an action is requested as a result of the transaction. Consists of links to past transactions only if they occurred.  If this transaction called for a response - this requests that the system searches for that response.</P>
<P>IV.A.8. User Specific-Configuration Data [Optional, good practice]</P>
<P>Identifies all of the possible permissions and views that a record could have.  Refers to the data dictionary.</P>
<P>IV.B. Responsibility</P>
<P>Outlines the reporting structure responsible for creating the record and under whose or what authorization the are operating under.</P>
<P>IV.B.1. Originating-Organization [Mandatory]</P>
<P>Identifies all levels of the reporting structure that created the record - from the office of origin to the top of the hierarchy.</P>
<P>IV.B.2. Authorization [Mandatory]</P>
<P>Identifies the specific office(s)/position(s) authorized to engage in the identified transaction.</P>
<P>V. CONTENT LAYER</P>
<P>Describes the actual data engaged in the transaction of which the record is evidence of.  The form of the data cannot be defined specifically because it may take any form.</P>
<P>V.A. Content Description</P>
<P>Describes the actual content of the record.</P>
<P>V.A.1. Content-Created [Optional*]</P>
<P>Identifies the data described by the preceding metadata.  Consists of the actual data - if there is any.</P>
<P>V.A.2. Content-Incorporated [Optional*]</P>
<P>Identifies any other records incorporated into the content of the record encapsulated by the metadata.  Consists of the actual data contained in these other records.</P>
<P>VI. USE HISTORY LAYER</P>
<P>Establishes when and how the record was used previously - for example: what redacted versions have been released and when, if the record was destroyed, under whose or what authority it was destroyed and when, how was the record indexed (identifies anything that was done to the record since its creation).  This layer is reserved for the end because it is the only layer that will be continuously added to without having to open the record.</P>
<P>VI.A. Use History (Repeatable Transaction Table)</P>
<P>Identifies the history of use of the record - the type of use, when it was used, and by whom.  Also indicated any redactions of the data.</P>
<P>VI.A.1. Use-Type [Mandatory]</P>
<P>Identifies how the data was used: viewed, copied, edited, filed, indexed, classified, sent, disposed, etc.  This involves identifying the various types of use permitted by the system.</P>
<P>VI.A.3. Use-Instance-Time [Mandatory]</P>
<P>Identifies when the data was used - i.e. the date and time the data was used.</P>
<P>VI.A.4. Use-Instance-User [Mandatory]</P>
<P>Identifies who or what used the data on a given date at a given time.</P>
<P>VI.A.5. Use-Redactions [Mandatory if redacted on release]</P>
<P>Identifies what part of the record was viewed.</P>
<P>* Note: Although it is possible to conduct a transaction that adds no new data content to existing records (e.g., only forwards pre-existing material, without so much as a cover note), and it is possible to have transactions which do not incorporate previously existing records, it is not possible to have a transaction without any content.  Thus the "Record" cluster is mandatory, although the metadata items in it are both optional.  The "Content" level is therefore also mandatory.</P></TD>
<TD WIDTH="2%" BGCOLOR="#FFFFCC" VALIGN="TOP">&nbsp;</TD>
</TR>
<TR>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
<TD WIDTH="96%" VALIGN="TOP" BGCOLOR="#FFFFCC" ALIGN="CENTER"><!-- #BeginLibraryItem "/Library/bottom menu.lbi" --><HR SIZE="1" noshade><A HREF="../../index.htm"><B>Home</B></A>&nbsp;| <A HREF="../../search/index.htm"><B>Search</B></A>&nbsp;| 
<A HREF="../../sitemap/index.htm"><B>Site&nbsp;Map</B></A>&nbsp;| <A HREF="../../news/index.htm"><B>What's 
New</B></A>&nbsp;| <A HREF="../../feedback/index.htm"><B>Feedback</B></A>&nbsp;| 
<A HREF="../../about/index.htm"><B>About&nbsp;the&nbsp;Dublin&nbsp;Core</B></A>&nbsp;| 
<A HREF="../../news/index.htm"><B>News&nbsp;and&nbsp;Publications</B></A>&nbsp;| 
<A HREF="../../documents/index.htm"><B>Documents</B></A>&nbsp;| <A HREF="../../education/index.htm"><B>Questions&nbsp;and&nbsp;Answers</B></A>&nbsp;| 
<A HREF="../../projects/index.htm"><B>Projects</B></A>&nbsp;| <A HREF="../../tools/index.htm"><B>Tools</B></A>&nbsp;| 
<A HREF="../../groups/index.htm"><B>Working&nbsp;Groups</B></A>&nbsp;| <A HREF="../../about/workshop.htm"><B>Workshop&nbsp;Series</B></A><!-- #EndLibraryItem --></TD>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
</TR>
<TR>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
<TD WIDTH="96%" BGCOLOR="#FFFFCC">&nbsp;</TD>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
</TR>
</TABLE>
<TR>
<TD><!-- #BeginLibraryItem "/Library/_bottom copyright table.lbi" --><TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR><TD HEIGHT="20" WIDTH="100%" BGCOLOR="#000000" ALIGN="RIGHT"><!-- #BeginLibraryItem "/Library/copyright info bottom.lbi" --><FONT COLOR="#FFFFCC"><I>&copy; 2000 DCMI&nbsp;</I></FONT><!-- #EndLibraryItem -->&nbsp;</TD></TR>
</TABLE><!-- #EndLibraryItem --></TD>
</TR>
</TABLE>
</DIV>
</BODY>
</HTML>