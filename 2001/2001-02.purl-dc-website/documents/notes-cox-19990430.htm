<HTML>
<HEAD>
<TITLE>Dublin Core Metadata Initiative / Notes - A syntax for writing a list of labelled values in a text string</TITLE>
<!--If you are looking for the Dublin Core Metadata, please add .rdf to the URL.  
We've associated external metadata linked by the HTML LINK element. -->
<SCRIPT SRC="../javascript_level01.js" TYPE="TEXT/JAVASCRIPT"></SCRIPT>
<LINK REL="meta" HREF="notes-cox-19990430.htm.rdf">
</HEAD>
<BODY BGCOLOR="#FFFFE7" TEXT="#000000" ALINK="#FFFFFF" LINK="#990000" VLINK="#000066">
<DIV ALIGN="CENTER">
<TABLE BORDER="0" WIDTH="86%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD><!-- #BeginLibraryItem "/Library/_top url date table.lbi" --><TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR><TD HEIGHT="20" WIDTH="50%" ALIGN="LEFT" BGCOLOR="#000000"><!-- #BeginLibraryItem "/Library/url top.lbi" -->&nbsp;&nbsp;<FONT COLOR="#FFFFCC"><B>http://purl.org/dc</B></FONT><!-- #EndLibraryItem --></TD><TD HEIGHT="20" WIDTH="50%" ALIGN="RIGHT" BGCOLOR="#000000">&nbsp;
</TD></TR>
</TABLE><!-- #EndLibraryItem --><!-- #BeginLibraryItem "/Library/_top table.lbi" --><TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD HEIGHT="32" WIDTH="2%" BGCOLOR="#669999">&nbsp;</TD>
    
<TD HEIGHT="32" WIDTH="58%" BGCOLOR="#669999"><A HREF="/oclc/research/projects/core/index.htm"><IMG SRC="../images/dcmi/dcmi_22.gif" WIDTH="460" HEIGHT="32" ALT="Dublin Core Metadata Initiative" BORDER="0"></A></TD>
<TD WIDTH="38%" ROWSPAN="2" VALIGN="TOP" BGCOLOR="#669999">
<TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="8">
<TR>
<TD ALIGN="RIGHT" VALIGN="MIDDLE"><!-- #BeginLibraryItem "/Library/pop-up menu content [level 1].lbi" --><FONT SIZE="2">
<FORM NAME="menu">
<SELECT NAME="CHOICES" onChange="gotosite(this.options[this.selectedIndex].value)">
<OPTION selected>Dublin Core topics:</OPTION>
<OPTION VALUE="../index.htm">Home</OPTION>
<OPTION VALUE="../search/index.htm">Search</OPTION>
<OPTION VALUE="../sitemap/index.htm">Site Map</OPTION>
<OPTION VALUE="../news/index.htm">What's New</OPTION>
<OPTION VALUE="../feedback/index.htm">Feedback</OPTION>
<OPTION VALUE="../about/element_set.htm">Dublin Core Element Set</OPTION>
<OPTION VALUE="../about/index.htm">About the Dublin Core</OPTION>
<OPTION VALUE="../news/index.htm">News and Publications</OPTION>
<OPTION VALUE="../documents/index.htm">Documents</OPTION>
<OPTION VALUE="../education/index.htm">Questions &amp; Answers</OPTION>
<OPTION VALUE="../projects/index.htm">Projects</OPTION>
<OPTION VALUE="../schemas/index.htm">Schemas</OPTION>
<OPTION VALUE="../tools/index.htm">Tools</OPTION>
<OPTION VALUE="../groups/index.htm">Working Groups</OPTION>
<OPTION VALUE="../about/workshop.htm">Workshop Series</OPTION>
</SELECT>
</FORM>
</FONT><!-- #EndLibraryItem --></TD>
</TR>
</TABLE>
</TD>
<TD HEIGHT="32" WIDTH="2%" BGCOLOR="#669999">&nbsp;</TD>
</TR>
<TR>
<TD HEIGHT="20" WIDTH="2%" BGCOLOR="#669999">&nbsp;</TD>
<TD HEIGHT="20" ALIGN="LEFT" VALIGN="TOP" BGCOLOR="#669999"><!-- #BeginLibraryItem "/Library/mouseOver buttons.lbi" --><TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="425">
<TR>
<TD><A HREF="../index.htm" onMouseOut="di('Nbuttonshorizontal_01_01','Ibuttonshorizontal_01_01');return false;" onMouseOver="di('Nbuttonshorizontal_01_01','Ibuttonshorizontal_01_01o');return false;"><IMG NAME="Nbuttonshorizontal_01_01" SRC="../images/buttons/home.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Home"></A></TD>
<TD><A HREF="../search/index.htm" onMouseOut="di('Nbuttonshorizontal_01_02','Ibuttonshorizontal_01_02');return false;" onMouseOver="di('Nbuttonshorizontal_01_02','Ibuttonshorizontal_01_02o');return false;"><IMG NAME="Nbuttonshorizontal_01_02" SRC="../images/buttons/search.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Search"></A></TD>
<TD><A HREF="../sitemap/index.htm" onMouseOut="di('Nbuttonshorizontal_01_03','Ibuttonshorizontal_01_03');return false;" onMouseOver="di('Nbuttonshorizontal_01_03','Ibuttonshorizontal_01_03o');return false;"><IMG NAME="Nbuttonshorizontal_01_03" SRC="../images/buttons/sitemap.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Site Map"></A></TD>
<TD><A HREF="../news/index.htm" onMouseOut="di('Nbuttonshorizontal_01_04','Ibuttonshorizontal_01_04');return false;" onMouseOver="di('Nbuttonshorizontal_01_04','Ibuttonshorizontal_01_04o');return false;"><IMG NAME="Nbuttonshorizontal_01_04" SRC="../images/buttons/new.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="What's New"></A></TD>
<TD><A HREF="../feedback/index.htm" onMouseOut="di('Nbuttonshorizontal_01_05','Ibuttonshorizontal_01_05');return false;" onMouseOver="di('Nbuttonshorizontal_01_05','Ibuttonshorizontal_01_05o');return false;"><IMG NAME="Nbuttonshorizontal_01_05" SRC="../images/buttons/feedback.gif" WIDTH="85" HEIGHT="17" BORDER="0" ALT="Feedback"></A></TD>
</TR>
</TABLE><!-- #EndLibraryItem --></TD>
<TD HEIGHT="20" BGCOLOR="#669999" WIDTH="2%">&nbsp;</TD>
</TR>
</TABLE>
<!-- #EndLibraryItem -->
<TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD WIDTH="2%" BGCOLOR="#99CCCC">&nbsp;</TD>
            <TD WIDTH="96%" ALIGN="RIGHT" VALIGN="MIDDLE" BGCOLOR="#99CCCC"><FONT COLOR="#003366"><A HREF="index.htm"><B>Documents</B></A> 
              <B>/</B> <A HREF="notes.htm"><B>Notes</B></A> <B>/</B> <b>A Syntax 
              for writing a list of labelled values in a text string</b></FONT></TD>
<TD WIDTH="2%" BGCOLOR="#99CCCC">&nbsp;</TD>
</TR>
</TABLE>
<TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
            <TD WIDTH="96%" VALIGN="TOP" BGCOLOR="#FFFFCC"> 
              <p>&nbsp;</p>
              <table border="0" width="100%" cellspacing="0" cellpadding="2">
                <tr> 
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><b>Title:</b></div>
                  </td>
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"> 
                      <h3><font color="#990000">A syntax for writing a list of 
                        labelled values in a text string</font></h3>
                    </div>
                  </td>
                </tr>
                <tr> 
                  <td align="RIGHT" valign="TOP" height="25"> 
                    <div align="left"><b>Creator:</b></div>
                  </td>
                  <td align="RIGHT" valign="TOP" height="25"> 
                    <div align="left"><a href="mailto:simon.cox@ned.dem.csiro.au">Simon 
                      Cox</a>, CSIRO<b> </b></div>
                  </td>
                </tr>
                <tr> 
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><b>Creator:</b></div>
                  </td>
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><a href="mailto:renato@dstc.edu.au">Renato 
                      Iannella</a>, DSTC</div>
                  </td>
                </tr>
                <tr> 
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><b>Date Issued: </b></div>
                  </td>
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left">1999-04-30</div>
                  </td>
                </tr>
                <tr> 
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><b>Identifier:</b></div>
                  </td>
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><a href="notes-cox-19990430.htm">http://purl.oclc.org/dc/documents/notes-cox-19990430.htm</a></div>
                  </td>
                </tr>
                <tr> 
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><b>Replaces:</b></div>
                  </td>
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left">Not Applicable</div>
                  </td>
                </tr>
                <tr> 
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><b>Is Replaced By:</b></div>
                  </td>
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left">Not Applicable</div>
                  </td>
                </tr>
                <tr> 
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left"><b>Latest version:</b></div>
                  </td>
                  <td align="RIGHT" valign="TOP"> 
                    <div align="left">Not Applicable</div>
                  </td>
                </tr>
                <tr> 
                  <td width="20%" valign="TOP"> 
                    <div align="left"></div>
                  </td>
                  <td width="80%" valign="TOP"> 
                    <div align="left"></div>
                  </td>
                </tr>
                <tr> 
                  <td width="20%" valign="TOP"> 
                    <div align="left"><b>Status of document: </b></div>
                  </td>
                  <td width="80%" valign="TOP"> 
                    <div align="left"> 
                      <p>This document is a <a href="notes.htm">NOTE</a> made 
                        available by the Dublin Core Metadata Inititive Directorate 
                        for discussion only. The publication of a NOTE by the 
                        Dublin Core implies no endorsement of any kind.</p>
                    </div>
                  </td>
                </tr>
                <tr> 
                  <td valign="TOP"><b>Description of document:</b></td>
                  <td valign="TOP">We describe a method for recording lists of 
                    labelled values in a text string, called Dublin Core Structured 
                    Values, with the label DCSV. The notation is intended for 
                    structured information within attribute value strings in markup-languages 
                    such as HTML and XML. This is likely to be useful in recording 
                    complex element values in metadata systems based on the qualified 
                    Dublin Core model. </td>
                </tr>
                <tr> 
                  <td valign="TOP" height="15"> 
                    <div align="left"><b>Document<br>
                      metadata: </b></div>
                  </td>
                  <td valign="TOP" height="15"> 
                    <div align="left"><a href="notes-cox-19990430.htm.rdf"><br>
                      http://purl.org/dc/documents/notes-cox-19990430.htm.rdf 
                      </a> </div>
                  </td>
                </tr>
                <tr> 
                  <td valign="TOP" colspan="2"> 
                    <hr noshade>
                  </td>
                </tr>
              </table>
              <OL>
                <LI><A HREF="#intro">Introduction</A></LI>
                <li><A HREF="#DCSV">Structured Values - the DCSV scheme</A></li>
                <LI><A HREF="#parse">Parsing DCSV</A></LI>
                <LI><A HREF="#examples">Examples</A></LI>
                <LI><A HREF="#code">Sample Code for parsing DCSV coded values</A></LI>
                <LI><A HREF="#ackn">Acknowledgments</A></LI>
                <LI><A HREF="#References">References</A></LI>
              </OL>
              <P>
              <HR SIZE="1" noshade>
              <H2><A NAME="intro"></A>1. Introduction</H2>
              <P>Element <I>attributes</I> in markup languages, such as HTML [<A HREF="#HTML4">HTML4</A>] 
                and XML [<A HREF="#XML">XML</A>], provide an alternative position 
                to the element <I>content</I> for recording data. For some "empty" 
                elements - such as the <CODE>&lt;IMG &gt;</CODE>and <CODE>&lt;META 
                &gt;</CODE>elements in HTML - attributes are the only place to 
                hold data. In other cases there may be good reasons to prefer 
                element attributes to element content for data. For example, fragments 
                of XML can be included in the <CODE>&lt;HEAD&gt;</CODE>of a HTML 
                document, and will be safely ignored by most client software (eg 
                browsers) provided the elements have no content. This syntax trick 
                can be used to embed XML-RDF encoded data safely in current versions 
                of HTML [<A HREF="#RDF-in-HTML">RDF-in-HTML</A>].</P>
              <P>Future versions of HTML are expected to overcome these limitations 
                by allowing general XML documents to be included [<A HREF="#XHTML">XHTML</A>]. 
                Nevertheless, there is strong interest in using HTML <CODE>&lt;META 
                &gt;</CODE>elements to record data with more structure than normally 
                implied by a plain-text string, in particular to record metadata 
                according to the qualified Dublin Core model [<A HREF="#Q-DC-HTML">Q-DC-HTML</A>].</P>
              <P>However, the use of element attributes for storing data has a 
                number of technical limitations:</P>
              <OL>
                <LI>attributes may occur no more than once</LI>
                <LI>the data must consist of a text-string including no double-quotes 
                  (")</LI>
              </OL>
              <P>These features mean that there is no built-in way to indicate 
                the structure of the data.</P>
              <P>Nevertheless, in certain applications, it is highly desirable 
                to be able to encode structured values within a plain-text string. 
                Some generic methods are in common use. Inheriting conventions 
                from natural languages, commas (,) and semi-colons (;) are frequently 
                used as list separators. Similarly, comma-separated-values (CSV) 
                and tab-separated-values (TSV) are common export formats from 
                spreadsheet and database software. Dots (.) and dashes (-) are 
                sometimes used to imply hierarchies, particularly in thesaurus 
                applications.</P>
              <P>A number of specific encoding schemes use punctuation characters 
                within the text string to indicate structure. For example, colons 
                (:) terminate protocol labels, and double slashes (//) act as 
                separators for identifiers coded as URIs [<A HREF="#URI">URI</A>]. 
                Colons (:) separate specified labels from values within a field, 
                and semi-colons (;) separate fields within a personal description 
                according to vCard [<A HREF="#vCard">vCard</A>]. Hyphens are one 
                of the many characters used to separate fields in a date according 
                with ISO8601 [<A HREF="#ISO8601">ISO8601</A>]. For some schemes 
                - vCard and ISO8601, for example - the punctuation indicates a 
                very formal structure to the value, and is expected to be parsed 
                automatically.</P>
              <P>Our intention in this note is to define a generic, self-describing 
                data-structuring method for text-strings, to be used when no other 
                suitable scheme is available. This is based on methods used and 
                found successful elsewhere, vCard in particular, but is more generalised 
                than the preceding standards.</P>
              <H2><A NAME="DCSV"></A>2. Structured Values - the DCSV scheme</H2>
              <P>To allow the recording of generic <B>Structured Values</B>, we 
                introduce the Dublin Core Structured Values (<B>DCSV</B>) scheme.</P>
              <P>We distinguish between two types of substring - <I>labels</I> 
                and <I>values</I>, where a label is the name of the type of a 
                value, and a value is the data itself. Furthermore, we allow a 
                complete value to be disaggregated into set of <I>components</I>, 
                each of which has its own label and value. A value that is comprised 
                of components in this way is called a <I>structured value</I>.</P>
              <P>Punctuation characters are used in recording a structured value 
                as follows:</P>
              <UL>
                <LI>colons (:) separate plain-text labels of structured value-components 
                  from the values themselves</LI>
                <LI>semi-colons (;) separate (optionally labelled) value-components 
                  within a list</LI>
                <LI>dots (.) indicate hierachical structure in labels, if required.</LI>
              </UL>
              <P>The labels and the component values themselves each consist of 
                a text-string. The intention is that the label will be a word 
                or code corresponding to the name of the value-component. Labels 
                may be absent, in which case the entire sub-string delimited by 
                semi-colons (;) or the end of the string comprise the component 
                value.</P>
              <P>The following patterns show how structured values may be recorded 
                in strings using DCSV:</P>
              <PRE>"u1; u2; u3"
"cA:v1"
"cA:v1; cB.part1:v2; cB.part2:v3"
"cA:v1; u2; u3"</PRE>
              <P>where <CODE>u1</CODE>, <CODE>u2</CODE>and <CODE>u3</CODE>are 
                unlabelled components, <CODE>cA</CODE>and <CODE>cB</CODE>are the 
                labels of Structured Value components, <CODE>part1</CODE>and <CODE>part2</CODE>are 
                sub-components of <CODE>cB</CODE>, and <CODE>v1</CODE>, <CODE>v2</CODE>and 
                <CODE>v3</CODE>are values of the components. 
              <P>The use of the specific punctuation characters in DCSV coded 
                values means that these characters cannot be used directly within 
                strings which comprise the content (either labels or values) of 
                the components. For DCSV, therefore, when a period, full-stop 
                or dot (.) a colon (:), or a semi-colon (;) is required within 
                the value, the characters are escaped using a backslash, appearing 
                as <B>\.</B> <B>\:</B> <B>\;</B>, and the backslash itself is 
                escaped similarly <B>\\</B> . This method of escaping special 
                characters largely preserves readability and the ability to enter 
                DCSV coded metadata values easily using a text-editor if required. 
                Software written to process DCSV coded values must make the necessary 
                substitutions.</P>
              <P>Note that, the double-quote (") character is a generic case that 
                cannot be used directly within HTML or XML element attributes.</P>
              <H2><A NAME="parse"></A>3. Parsing DCSV</H2>
              <P>A simple method can be used to parse metadata values recorded 
                according to the DCSV scheme. For a single value recorded using 
                the DCSV scheme:</P>
              <OL>
                <LI>split the text-string into a list of substrings on any unescaped 
                  semi-colons (;); <BR>
                  if no semi-colon is present, there is a single substring</LI>
                <LI>split each substring into its (label,value) on any unescaped 
                  colons (:); <BR>
                  if no colon is present, the label is empty</LI>
                <LI>within each value replace the escaped characters with the 
                  actual character required.</LI>
              </OL>
              <P>A short Perl program which performs this parsing operation is 
                included at the end of this note.</P>
              <H2><A NAME="examples"></A>4. Examples</H2>
              <PRE>"name.given:Renato; name.family:Iannella; employer:DSTC; 
Contact:Level 7, Gehrmann Labs, The University of Queensland, 
Qld\. 4072, Australia"
"rows:200; cols:450"</PRE>
              <P>The DCSV scheme adds most of the components required for the 
                representation of the qualified DC model in HTML [<A HREF="#Q-DC-HTML">Q-DC-HTML</A>][<A HREF="#Q-DC-RDF">Q-DC-RDF</A>], 
                while remaining fully compatible with the HTML-4 [<A HREF="#HTML4">HTML</A>] 
                standard. It thus supports a recording method for qualified Dublin 
                Core, compatible with tools which rely on HTML (browsers, metadata 
                harvesters), but with a clear route for migrating relatively rich 
                information into fully structured notations when appropriate. 
                In this context, DCSV is noted as the value of the 
              <PRE>SCHEME</PRE>
              attribute of the HTML 
              <PRE>&lt;META &gt;</PRE>
              element as shown in the foloowing examples: 
              <PRE>&lt;META NAME="DC.Creator" SCHEME="DCSV" 
         CONTENT="name.given:Simon; name.family:Cox; 
employer:CSIRO; height:177 cm"&gt;
&lt;META NAME="DC.Language" SCHEME="RFC1766" CONTENT="en-AU"&gt;
&lt;META NAME="DC.Contributor" SCHEME="vCard" CONTENT="fn:Simon 
Cox; org:CSIRO"&gt;
&lt;META NAME="DC.Date" SCHEME="ISO8601" CONTENT="1999-04-30"&gt;
&lt;META NAME="DC.Relation" SCHEME="URL" 
CONTENT="http://www.foo.bar/explication.html"&gt;
&lt;META NAME="DC.Format.media" SCHEME="IMT" CONTENT="image/gif"&gt;
&lt;META NAME="DC.Format.size" CONTENT="14 kB"&gt;
&lt;META NAME="DC.Format.size" SCHEME="DCSV" CONTENT="rows:200; cols:450"&gt;</PRE>
              <H2><A NAME="code"></A>5. Sample Code for parsing DCSV coded values</H2>
              <P>The following Perl program reads a DCSV coded string entered 
                on stdin, and prints a formatted version of the structured result. 
                This code is provided for demonstration purposes only and contains 
                no error-checking.</P>
              <PRE>#!/usr/local/bin/perl

print "Enter string to be parsed:\n";

my $string = join('',&lt;STDIN&gt;);

print "\nString to be parsed is [$string]\n";

# First escape % characters
$string =~ s/%/"%".unpack('C',"%")."%"/eg; 

# Next change \ escaped characters to %d% where d is the 
character's ascii code
$string =~ s/\\(.)/"%".unpack('C',$1)."%"/eg;

print "\nEscaped string is [$string]\n";

# Now split the string into components
my @components = split(/;/, $string);

print "\nComponents:\n";
foreach $component (@components) {
&#9;my ($name, $value) = split(/:/, $component, 2);

&#9;# if there is no : $value is empty so copy $name 
into $value and empty $name
&#9;if (!$value) {
&#9;&#9;$value = $name;
&#9;&#9;$name = '';
&#9;}

&#9;# strip whitespace from name string
&#9;$name =~ s/^\s*(\S+)\s*$/$1/;

&#9;# convert % escaped characters back in value string
&#9;$value =~ s/%(\d+)%/pack('C',$1)/eg;

&#9;print "Name [$name] has value [$value]\n";
}</PRE>
              <P>
              <HR SIZE="1">
              <H2><A NAME="ackn"></A>6. Acknowledgments</H2>
              <P>John Kunze encouraged us to write up this proposal formally. 
                Kim Covil wrote the perl code.</P>
              <P>
              <HR SIZE="1">
              <H2><A NAME="References"></A>7. References</H2>
              <DL> 
                <DT><A NAME="HTML4"></A>[HTML4]</DT>
                <DD>Dave Raggett, Arnaud Le Hors, Ian Jacobs, 1998, <I>HTML 4.0 
                  Specification</I> <A HREF="http://www.w3.org/TR/REC-html40/">http://www.w3.org/TR/REC-html40/</A></DD>
                <DT><A NAME="ISO8601"></A>[ISO8601]</DT>
                <DD>M. Wolf and C. Wicksteed, 1997, <I>Date and Time Formats</I>, 
                  <A HREF="http://www.w3.org/TR/NOTE-datetime">http://www.w3.org/TR/NOTE-datetime</A></DD>
                <DT><A NAME="Q-DC-HTML"></A>[Q-DC-HTML]</DT>
                <DD>S. Cox 1999 <I>Recording qualified Dublin Core metadata in 
                  HTML</I> <a href="http://www.agcrc.csiro.au/projects/3018CO/metadata/qdchtml/NOTE-QDCHTML-19991103.html">http://www.agcrc.csiro.au/projects/3018CO/metadata/qdchtml/NOTE-QDCHTML-19991103.html</a></DD>
                <DT><A NAME="Q-DC-RDF"></A>[Q-DC-RDF]</DT>
                <DD>E. Miller, P. Miller, D. Brickley, 1999. <I>Guidance on expressing 
                  the Dublin Core within the Resource Description Framework (RDF)</I> 
                  <A HREF="http://www.ukoln.ac.uk/interop-focus/activities/dc/datamodel/">http://www.ukoln.ac.uk/interop-focus/activities/dc/datamodel/</A></DD>
                <DT><A NAME="RDF-in-HTML"></A>[RDF-in-HTML]</DT>
                <DD>This uses the most compact form of XML-RDF [RDF-syntax], in 
                  which all the data occurs as attribute values. In this form 
                  several important capabilities are not available, such as multiple 
                  (repeated) values. For an example, see Figure 5 in S.J.D. Cox 
                  and K.D. Covil, "A web-based geological information system using 
                  metadata", <I>Proc. 3rd IEEE META-DATA Conference</I>, <A HREF="http://computer.org/conferen/proceed/meta/1999/papers/7/cox_covil.html">http://computer.org/conferen/proceed/meta/1999/papers/7/cox_covil.html</A></DD>
                <DT><A NAME="URI"></A>[URI]</DT>
                <DD>T. Berners-Lee, R. Fielding, L Masinter, 1998 <I>Uniform Resource 
                  Identifiers (URI): Generic Syntax</I> RFC2396 <A HREF="http://info.internet.isi.edu/in-notes/rfc/files/rfc2396.txt">http://info.internet.isi.edu/in-notes/rfc/files/rfc2396.txt</A> 
                  <BR>
                  T. Berners-Lee, L. Masinter, and M. McCahill, 1994 <I>Uniform 
                  Resource Locators</I>, RFC1738 <A HREF="http://info.internet.isi.edu/in-notes/rfc/files/rfc1738.txt">http://info.internet.isi.edu/in-notes/rfc/files/rfc1738.txt</A>. 
                  <BR>
                  T. Berners-Lee, 1994 <I>Universal Resource Identifiers in WWW: 
                  A Unifying Syntax for the Expression of Names and Addresses 
                  of Objects on the Network as used in the World-Wide Web</I>, 
                  RFC1630 <A HREF="http://info.internet.isi.edu/in-notes/rfc/files/rfc1630.txt">http://info.internet.isi.edu/in-notes/rfc/files/rfc1630.txt</A>.</DD>
                <DT><A NAME="vCard"></A>[vCard]</DT>
                <DD>F. Dawson, T. Howes, 1998 <I>vCard MIME Directory Profile</I> 
                  RFC2426 <A HREF="http://info.internet.isi.edu/in-notes/rfc/files/rfc2426.txt">http://info.internet.isi.edu/in-notes/rfc/files/rfc2426.txt</A> 
                </DD>
                <DT><A NAME="XHTML"></A>[XHTML]</DT>
                <DD>Steven Pemberton and many others, 1999 <I>XHTML 1.0: The Extensible 
                  HyperText Markup Language</I> <A HREF="http://www.w3.org/TR/WD-html-in-xml/">http://www.w3.org/TR/WD-html-in-xml/</A> 
                  <BR>
                  See also Dave Raggett, <I>HyperText Markup Language Activity 
                  Statement</I> <A HREF="http://www.w3.org/MarkUp/Activity.html">http://www.w3.org/MarkUp/Activity.html</A></DD>
                <DT><A NAME="XML"></A>[XML]</DT>
                <DD>Extensible Markup Language <A HREF="http://www.w3.org/XML/">http://www.w3.org/XML/</A></DD>
              </DL>
              <P>
              <HR SIZE="1" noshade>
              <I> 
              <P>Last modified 1999-04-30</P>
              </I></TD>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
</TR>
<TR>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
<TD WIDTH="96%" VALIGN="TOP" BGCOLOR="#FFFFCC" ALIGN="CENTER"><!-- #BeginLibraryItem "/Library/bottom menu.lbi" --><HR SIZE="1" noshade><A HREF="../index.htm"><B>Home</B></A>&nbsp;| <A HREF="../search/index.htm"><B>Search</B></A>&nbsp;| 
<A HREF="../sitemap/index.htm"><B>Site&nbsp;Map</B></A>&nbsp;| <A HREF="../news/index.htm"><B>What's 
New</B></A>&nbsp;| <A HREF="../feedback/index.htm"><B>Feedback</B></A>&nbsp;| 
<A HREF="../about/index.htm"><B>About&nbsp;the&nbsp;Dublin&nbsp;Core</B></A>&nbsp;| 
<A HREF="../news/index.htm"><B>News&nbsp;and&nbsp;Publications</B></A>&nbsp;| 
<A HREF="index.htm"><B>Documents</B></A>&nbsp;| <A HREF="../education/index.htm"><B>Questions&nbsp;and&nbsp;Answers</B></A>&nbsp;| 
<A HREF="../projects/index.htm"><B>Projects</B></A>&nbsp;| <A HREF="../tools/index.htm"><B>Tools</B></A>&nbsp;| 
<A HREF="../groups/index.htm"><B>Working&nbsp;Groups</B></A>&nbsp;| <A HREF="../about/workshop.htm"><B>Workshop&nbsp;Series</B></A><!-- #EndLibraryItem --></TD>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
</TR>
<TR>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
<TD WIDTH="96%" BGCOLOR="#FFFFCC">&nbsp;</TD>
<TD WIDTH="2%" BGCOLOR="#FFFFCC">&nbsp;</TD>
</TR>
</TABLE>
<TR>
<TD><!-- #BeginLibraryItem "/Library/_bottom copyright table.lbi" --><TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
<TR><TD HEIGHT="20" WIDTH="100%" BGCOLOR="#000000" ALIGN="RIGHT"><!-- #BeginLibraryItem "/Library/copyright info bottom.lbi" --><FONT COLOR="#FFFFCC"><I>&copy; 2000 DCMI&nbsp;</I></FONT><!-- #EndLibraryItem -->&nbsp;</TD></TR>
</TABLE><!-- #EndLibraryItem --></TD>
</TR>
</TABLE>
</DIV>
</BODY>
</HTML>