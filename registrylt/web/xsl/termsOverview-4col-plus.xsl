<?xml version="1.0" encoding='UTF-8'?> <xsl:stylesheet version="1.0"  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"  xmlns:dc="http://purl.org/dc/elements/1.1/"  xmlns:reg="http://dublincore.org/dcregistrylt/" ><xsl:output method="html" doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" /><xsl:include href="banner.xsl"/><xsl:include href="searchForm.xsl"/><xsl:include href="footer.xsl"/><xsl:include href="_url_encode.xsl"/><xsl:include href="getShortName.xsl"/><xsl:include href="getHREFLink.xsl"/><xsl:variable name="reqType" select="'termsOverview'"/><xsl:variable name="action" select="'navigate'"/><xsl:variable name="strs" select="document('../xml/translations.xml')/strings/lang[@RFC3066=$uiLang]"/><xsl:variable name="PI" select="processing-instruction('params')" /><xsl:variable name="uiLang" select="substring-before(substring-after($PI, 'uiLang=&#034;'), '&#034;')" /><xsl:variable name="expand" select="substring-before(substring-after($PI, 'expand=&#034;'), '&#034;')" /><xsl:variable name="rdf" select="'http://www.w3.org/1999/02/22-rdf-syntax-ns#'" /><xsl:variable name="rdfs" select="'http://www.w3.org/2000/01/rdf-schema#'"/><xsl:variable name="dc" select="'http://purl.org/dc/elements/1.1/'" /><xsl:variable name="dcq" select="'http://purl.org/dc/terms/'" /><xsl:variable name="dctype" select="'http://purl.org/dc/dcmitype/'" /><xsl:template match="rdf:RDF">	<html>	<head>		<title>The Open Metadata Registry</title>		<script language="JavaScript" src="/dcregistrylt/js/overlib.js" type="text/javascript" ></script>		<link type="text/css" rel="stylesheet" href="/dcregistrylt/css/default.css" />	</head>	<body>	<div id="overDiv" style="position: absolute; visibility: hidden; z-index: 1000;"></div>	<xsl:call-template name="banner">				<xsl:with-param name="action" select="$action" />		<xsl:with-param name="uiLang" select="$uiLang" />	</xsl:call-template>	<xsl:call-template name="searchForm">		<xsl:with-param name="action" select="$action" />		<xsl:with-param name="reqType" select="$reqType" />		<xsl:with-param name="uiLang" select="$uiLang" />	</xsl:call-template>	<table cellspacing="0" width="100%" class="border">	<tr><th colspan="8">	<xsl:value-of select="$strs/str[@name='summary_termsOverview']"/>			</th></tr>		<xsl:apply-templates select="//rdf:Description[@rdf:about='http://dublincore.org/dcregistrylt/elements/']"/>	</table>	<p />	<xsl:call-template name="footer" />	</body>	</html></xsl:template><xsl:template match="rdf:Description[@rdf:about='http://dublincore.org/dcregistrylt/elements/']">			<xsl:for-each select="*[substring(local-name(),1,1)='_'][position() mod 4 = 1]">		<tr>		<xsl:apply-templates select ="./@rdf:resource | following-sibling::*[position() &lt; 4]/@rdf:resource" />		</tr>	</xsl:for-each>	</xsl:template><xsl:template match="*/@rdf:resource">	<xsl:variable name="item">		<xsl:value-of select="."/>	</xsl:variable>		<xsl:variable name="encoded_item">		<xsl:call-template name="_url_encode">			<xsl:with-param name="url" select="$item"/>		</xsl:call-template>	</xsl:variable>		<xsl:variable name="refInd">		<xsl:choose>				<xsl:when test="//rdf:Description[@rdf:about=$item]">				<xsl:value-of select="'+'"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="''"/>							</xsl:otherwise>		</xsl:choose>	</xsl:variable>		<xsl:variable name="refs">		<xsl:for-each select="//rdf:Description[@rdf:about=$item]/reg:isRefinedBy/@rdf:resource">			<xsl:choose>				<xsl:when test="contains(., $dc)">					<xsl:value-of select="concat(substring-after(., $dc), '&lt;br/&gt;')"/>				</xsl:when>				<xsl:when test="contains(., $dcq)">					<xsl:value-of select="concat(substring-after(., $dcq), '&lt;br/&gt;')"/>				</xsl:when>				<xsl:otherwise>					<xsl:value-of select="concat(., '&lt;br/&gt;')"/>								</xsl:otherwise>			</xsl:choose>		</xsl:for-each>	</xsl:variable>		<td width="1%">	<xsl:choose>			<xsl:when test="$refInd='+'">			<xsl:choose>				<xsl:when test="$item=$expand">					<a>					<xsl:attribute name="HREF">						<xsl:value-of select="'/dcregistrylt/termsOverviewServlet'"/>					</xsl:attribute>					<img src="images/minus.gif" alt="shrink" valign="center" /></a>				</xsl:when>				<xsl:otherwise>					<a onmouseout="return nd()">					<xsl:attribute name="HREF">						<xsl:value-of select="concat('/dcregistrylt/termsOverviewServlet?expand=', $encoded_item)"/>					</xsl:attribute>					<xsl:attribute name="onmouseover">						<xsl:text>return overlib('</xsl:text><xsl:value-of select="$refs"/><xsl:text>')</xsl:text>					</xsl:attribute>					<img src="images/plus.gif" alt="expand" valign="center" /></a>				</xsl:otherwise>			</xsl:choose>		</xsl:when>		<xsl:otherwise>			&#160;			</xsl:otherwise>	</xsl:choose>	</td><td width="24%">	<a>	<xsl:attribute name="HREF">		<xsl:value-of select="concat('/dcregistrylt/detailServlet?reqType=detail', '&amp;', 'item=', $encoded_item)"/>	</xsl:attribute>	<xsl:choose>			<xsl:when test="contains($item, $dc)">			<xsl:value-of select="substring-after($item, $dc)"/>		</xsl:when>		<xsl:when test="contains($item, $dcq)">			<xsl:value-of select="substring-after($item, $dcq)"/>		</xsl:when>		<xsl:otherwise>			<xsl:value-of select="$item"/>						</xsl:otherwise>	</xsl:choose>	</a>		<xsl:if test="$item=$expand">		<xsl:call-template name="refinements"/>	</xsl:if>			</td>	</xsl:template><xsl:template name="refinements">	<br/>	<xsl:for-each select="//rdf:Description[@rdf:about=$expand]/reg:isRefinedBy/@rdf:resource">		<xsl:sort select="substring-after(., $dcq)"/>		<xsl:variable name="encoded_item">			<xsl:call-template name="_url_encode">				<xsl:with-param name="url" select="."/>			</xsl:call-template>		</xsl:variable>		<a class="refinement"><xsl:attribute name="HREF"><xsl:value-of select="concat('/dcregistrylt/detailServlet?reqType=detail', '&amp;', 'item=', $encoded_item)"/></xsl:attribute>		<xsl:value-of select="substring-after(., $dcq)"/>		</a>&#160;	</xsl:for-each>	</xsl:template></xsl:stylesheet>